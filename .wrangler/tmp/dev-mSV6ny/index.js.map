{
  "version": 3,
  "sources": ["../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/node_modules/unenv/dist/runtime/_internal/utils.mjs", "../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/perf_hooks/performance.mjs", "../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/node_modules/@cloudflare/unenv-preset/dist/runtime/polyfill/performance.mjs", "../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/node_modules/unenv/dist/runtime/node/console.mjs", "../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/node_modules/unenv/dist/runtime/mock/noop.mjs", "../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/node_modules/@cloudflare/unenv-preset/dist/runtime/node/console.mjs", "../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-console", "../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/process/hrtime.mjs", "../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/process/process.mjs", "../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/tty/write-stream.mjs", "../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/tty/read-stream.mjs", "../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/process/node-version.mjs", "../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/node_modules/@cloudflare/unenv-preset/dist/runtime/node/process.mjs", "../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/_virtual_unenv_global_polyfill-@cloudflare-unenv-preset-node-process", "../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/templates/middleware/common.ts", "../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../src/shared/infra/clients/d1.ts", "../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/node_modules/unenv/dist/runtime/node/internal/crypto/node.mjs", "../../../../../.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/node_modules/@cloudflare/unenv-preset/dist/runtime/node/crypto.mjs", "../../../node_modules/.pnpm/@google+generative-ai@0.24.1/node_modules/@google/generative-ai/dist/index.mjs", "../../../src/shared/infra/clients/gemini.ts", "../../../src/shared/infra/clients/quita.ts", "../../../src/shared/quita/save-article-summary.ts", "../../../src/shared/quita/search-top5-articles.ts", "../../../src/shared/quita/summarize-article.ts", "../../../src/shared/services/summarize-top5-articles.ts", "../../../src/api/handlers/scheduled.ts", "../../../src/shared/quita/get-all-article-summaries.ts", "../../../src/api/handlers/summaries.ts", "../../../src/api/handlers/summarize.ts", "../../../src/api/middleware/auth.ts", "../../../src/api/index.ts", "../../../src/web/index.ts", "../../../src/router.ts", "../../../src/index.ts", "../bundle-Y1xCSi/middleware-insertion-facade.js", "../bundle-Y1xCSi/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/ozawakazumasa/workspaces/ai-article-summary/.wrangler/tmp/dev-mSV6ny",
  "sourcesContent": ["/* @__NO_SIDE_EFFECTS__ */\nexport function rawHeaders(headers) {\n\tconst rawHeaders = [];\n\tfor (const key in headers) {\n\t\tif (Array.isArray(headers[key])) {\n\t\t\tfor (const h of headers[key]) {\n\t\t\t\trawHeaders.push(key, h);\n\t\t\t}\n\t\t} else {\n\t\t\trawHeaders.push(key, headers[key]);\n\t\t}\n\t}\n\treturn rawHeaders;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function mergeFns(...functions) {\n\treturn function(...args) {\n\t\tfor (const fn of functions) {\n\t\t\tfn(...args);\n\t\t}\n\t};\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function createNotImplementedError(name) {\n\treturn new Error(`[unenv] ${name} is not implemented yet!`);\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplemented(name) {\n\tconst fn = () => {\n\t\tthrow createNotImplementedError(name);\n\t};\n\treturn Object.assign(fn, { __unenv__: true });\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedAsync(name) {\n\tconst fn = notImplemented(name);\n\tfn.__promisify__ = () => notImplemented(name + \".__promisify__\");\n\tfn.native = fn;\n\treturn fn;\n}\n/* @__NO_SIDE_EFFECTS__ */\nexport function notImplementedClass(name) {\n\treturn class {\n\t\t__unenv__ = true;\n\t\tconstructor() {\n\t\t\tthrow new Error(`[unenv] ${name} is not implemented yet!`);\n\t\t}\n\t};\n}\n", "import { createNotImplementedError } from \"../../../_internal/utils.mjs\";\nconst _timeOrigin = globalThis.performance?.timeOrigin ?? Date.now();\nconst _performanceNow = globalThis.performance?.now ? globalThis.performance.now.bind(globalThis.performance) : () => Date.now() - _timeOrigin;\nconst nodeTiming = {\n\tname: \"node\",\n\tentryType: \"node\",\n\tstartTime: 0,\n\tduration: 0,\n\tnodeStart: 0,\n\tv8Start: 0,\n\tbootstrapComplete: 0,\n\tenvironment: 0,\n\tloopStart: 0,\n\tloopExit: 0,\n\tidleTime: 0,\n\tuvMetricsInfo: {\n\t\tloopCount: 0,\n\t\tevents: 0,\n\t\teventsWaiting: 0\n\t},\n\tdetail: undefined,\n\ttoJSON() {\n\t\treturn this;\n\t}\n};\nexport class PerformanceEntry {\n\t__unenv__ = true;\n\tdetail;\n\tentryType = \"event\";\n\tname;\n\tstartTime;\n\tconstructor(name, options) {\n\t\tthis.name = name;\n\t\tthis.startTime = options?.startTime || _performanceNow();\n\t\tthis.detail = options?.detail;\n\t}\n\tget duration() {\n\t\treturn _performanceNow() - this.startTime;\n\t}\n\ttoJSON() {\n\t\treturn {\n\t\t\tname: this.name,\n\t\t\tentryType: this.entryType,\n\t\t\tstartTime: this.startTime,\n\t\t\tduration: this.duration,\n\t\t\tdetail: this.detail\n\t\t};\n\t}\n}\nexport const PerformanceMark = class PerformanceMark extends PerformanceEntry {\n\tentryType = \"mark\";\n\tconstructor() {\n\t\tsuper(...arguments);\n\t}\n\tget duration() {\n\t\treturn 0;\n\t}\n};\nexport class PerformanceMeasure extends PerformanceEntry {\n\tentryType = \"measure\";\n}\nexport class PerformanceResourceTiming extends PerformanceEntry {\n\tentryType = \"resource\";\n\tserverTiming = [];\n\tconnectEnd = 0;\n\tconnectStart = 0;\n\tdecodedBodySize = 0;\n\tdomainLookupEnd = 0;\n\tdomainLookupStart = 0;\n\tencodedBodySize = 0;\n\tfetchStart = 0;\n\tinitiatorType = \"\";\n\tname = \"\";\n\tnextHopProtocol = \"\";\n\tredirectEnd = 0;\n\tredirectStart = 0;\n\trequestStart = 0;\n\tresponseEnd = 0;\n\tresponseStart = 0;\n\tsecureConnectionStart = 0;\n\tstartTime = 0;\n\ttransferSize = 0;\n\tworkerStart = 0;\n\tresponseStatus = 0;\n}\nexport class PerformanceObserverEntryList {\n\t__unenv__ = true;\n\tgetEntries() {\n\t\treturn [];\n\t}\n\tgetEntriesByName(_name, _type) {\n\t\treturn [];\n\t}\n\tgetEntriesByType(type) {\n\t\treturn [];\n\t}\n}\nexport class Performance {\n\t__unenv__ = true;\n\ttimeOrigin = _timeOrigin;\n\teventCounts = new Map();\n\t_entries = [];\n\t_resourceTimingBufferSize = 0;\n\tnavigation = undefined;\n\ttiming = undefined;\n\ttimerify(_fn, _options) {\n\t\tthrow createNotImplementedError(\"Performance.timerify\");\n\t}\n\tget nodeTiming() {\n\t\treturn nodeTiming;\n\t}\n\teventLoopUtilization() {\n\t\treturn {};\n\t}\n\tmarkResourceTiming() {\n\t\treturn new PerformanceResourceTiming(\"\");\n\t}\n\tonresourcetimingbufferfull = null;\n\tnow() {\n\t\tif (this.timeOrigin === _timeOrigin) {\n\t\t\treturn _performanceNow();\n\t\t}\n\t\treturn Date.now() - this.timeOrigin;\n\t}\n\tclearMarks(markName) {\n\t\tthis._entries = markName ? this._entries.filter((e) => e.name !== markName) : this._entries.filter((e) => e.entryType !== \"mark\");\n\t}\n\tclearMeasures(measureName) {\n\t\tthis._entries = measureName ? this._entries.filter((e) => e.name !== measureName) : this._entries.filter((e) => e.entryType !== \"measure\");\n\t}\n\tclearResourceTimings() {\n\t\tthis._entries = this._entries.filter((e) => e.entryType !== \"resource\" || e.entryType !== \"navigation\");\n\t}\n\tgetEntries() {\n\t\treturn this._entries;\n\t}\n\tgetEntriesByName(name, type) {\n\t\treturn this._entries.filter((e) => e.name === name && (!type || e.entryType === type));\n\t}\n\tgetEntriesByType(type) {\n\t\treturn this._entries.filter((e) => e.entryType === type);\n\t}\n\tmark(name, options) {\n\t\tconst entry = new PerformanceMark(name, options);\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tmeasure(measureName, startOrMeasureOptions, endMark) {\n\t\tlet start;\n\t\tlet end;\n\t\tif (typeof startOrMeasureOptions === \"string\") {\n\t\t\tstart = this.getEntriesByName(startOrMeasureOptions, \"mark\")[0]?.startTime;\n\t\t\tend = this.getEntriesByName(endMark, \"mark\")[0]?.startTime;\n\t\t} else {\n\t\t\tstart = Number.parseFloat(startOrMeasureOptions?.start) || this.now();\n\t\t\tend = Number.parseFloat(startOrMeasureOptions?.end) || this.now();\n\t\t}\n\t\tconst entry = new PerformanceMeasure(measureName, {\n\t\t\tstartTime: start,\n\t\t\tdetail: {\n\t\t\t\tstart,\n\t\t\t\tend\n\t\t\t}\n\t\t});\n\t\tthis._entries.push(entry);\n\t\treturn entry;\n\t}\n\tsetResourceTimingBufferSize(maxSize) {\n\t\tthis._resourceTimingBufferSize = maxSize;\n\t}\n\taddEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.addEventListener\");\n\t}\n\tremoveEventListener(type, listener, options) {\n\t\tthrow createNotImplementedError(\"Performance.removeEventListener\");\n\t}\n\tdispatchEvent(event) {\n\t\tthrow createNotImplementedError(\"Performance.dispatchEvent\");\n\t}\n\ttoJSON() {\n\t\treturn this;\n\t}\n}\nexport class PerformanceObserver {\n\t__unenv__ = true;\n\tstatic supportedEntryTypes = [];\n\t_callback = null;\n\tconstructor(callback) {\n\t\tthis._callback = callback;\n\t}\n\ttakeRecords() {\n\t\treturn [];\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.disconnect\");\n\t}\n\tobserve(options) {\n\t\tthrow createNotImplementedError(\"PerformanceObserver.observe\");\n\t}\n\tbind(fn) {\n\t\treturn fn;\n\t}\n\trunInAsyncScope(fn, thisArg, ...args) {\n\t\treturn fn.call(thisArg, ...args);\n\t}\n\tasyncId() {\n\t\treturn 0;\n\t}\n\ttriggerAsyncId() {\n\t\treturn 0;\n\t}\n\temitDestroy() {\n\t\treturn this;\n\t}\n}\nexport const performance = globalThis.performance && \"addEventListener\" in globalThis.performance ? globalThis.performance : new Performance();\n", "import {\n  performance,\n  Performance,\n  PerformanceEntry,\n  PerformanceMark,\n  PerformanceMeasure,\n  PerformanceObserver,\n  PerformanceObserverEntryList,\n  PerformanceResourceTiming\n} from \"node:perf_hooks\";\nglobalThis.performance = performance;\nglobalThis.Performance = Performance;\nglobalThis.PerformanceEntry = PerformanceEntry;\nglobalThis.PerformanceMark = PerformanceMark;\nglobalThis.PerformanceMeasure = PerformanceMeasure;\nglobalThis.PerformanceObserver = PerformanceObserver;\nglobalThis.PerformanceObserverEntryList = PerformanceObserverEntryList;\nglobalThis.PerformanceResourceTiming = PerformanceResourceTiming;\n", "import { Writable } from \"node:stream\";\nimport noop from \"../mock/noop.mjs\";\nimport { notImplemented, notImplementedClass } from \"../_internal/utils.mjs\";\nconst _console = globalThis.console;\nexport const _ignoreErrors = true;\nexport const _stderr = new Writable();\nexport const _stdout = new Writable();\nexport const log = _console?.log ?? noop;\nexport const info = _console?.info ?? log;\nexport const trace = _console?.trace ?? info;\nexport const debug = _console?.debug ?? log;\nexport const table = _console?.table ?? log;\nexport const error = _console?.error ?? log;\nexport const warn = _console?.warn ?? error;\nexport const createTask = _console?.createTask ?? /* @__PURE__ */ notImplemented(\"console.createTask\");\nexport const assert = /* @__PURE__ */ notImplemented(\"console.assert\");\nexport const clear = _console?.clear ?? noop;\nexport const count = _console?.count ?? noop;\nexport const countReset = _console?.countReset ?? noop;\nexport const dir = _console?.dir ?? noop;\nexport const dirxml = _console?.dirxml ?? noop;\nexport const group = _console?.group ?? noop;\nexport const groupEnd = _console?.groupEnd ?? noop;\nexport const groupCollapsed = _console?.groupCollapsed ?? noop;\nexport const profile = _console?.profile ?? noop;\nexport const profileEnd = _console?.profileEnd ?? noop;\nexport const time = _console?.time ?? noop;\nexport const timeEnd = _console?.timeEnd ?? noop;\nexport const timeLog = _console?.timeLog ?? noop;\nexport const timeStamp = _console?.timeStamp ?? noop;\nexport const Console = _console?.Console ?? /* @__PURE__ */ notImplementedClass(\"console.Console\");\nexport const _times = /* @__PURE__ */ new Map();\nexport function context() {\n\treturn _console;\n}\nexport const _stdoutErrorHandler = noop;\nexport const _stderrErrorHandler = noop;\nexport default {\n\t_times,\n\t_ignoreErrors,\n\t_stdoutErrorHandler,\n\t_stderrErrorHandler,\n\t_stdout,\n\t_stderr,\n\tassert,\n\tclear,\n\tConsole,\n\tcount,\n\tcountReset,\n\tdebug,\n\tdir,\n\tdirxml,\n\terror,\n\tcontext,\n\tcreateTask,\n\tgroup,\n\tgroupEnd,\n\tgroupCollapsed,\n\tinfo,\n\tlog,\n\tprofile,\n\tprofileEnd,\n\ttable,\n\ttime,\n\ttimeEnd,\n\ttimeLog,\n\ttimeStamp,\n\ttrace,\n\twarn\n};\n", "export default Object.assign(() => {}, { __unenv__: true });\n", "import {\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times,\n  Console\n} from \"unenv/node/console\";\nexport {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n} from \"unenv/node/console\";\nconst workerdConsole = globalThis[\"console\"];\nexport const {\n  assert,\n  clear,\n  // @ts-expect-error undocumented public API\n  context,\n  count,\n  countReset,\n  // @ts-expect-error undocumented public API\n  createTask,\n  debug,\n  dir,\n  dirxml,\n  error,\n  group,\n  groupCollapsed,\n  groupEnd,\n  info,\n  log,\n  profile,\n  profileEnd,\n  table,\n  time,\n  timeEnd,\n  timeLog,\n  timeStamp,\n  trace,\n  warn\n} = workerdConsole;\nObject.assign(workerdConsole, {\n  Console,\n  _ignoreErrors,\n  _stderr,\n  _stderrErrorHandler,\n  _stdout,\n  _stdoutErrorHandler,\n  _times\n});\nexport default workerdConsole;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/console\";\nglobalThis.console = defaultExport;", "export const hrtime = /* @__PURE__ */ Object.assign(function hrtime(startTime) {\n\tconst now = Date.now();\n\tconst seconds = Math.trunc(now / 1e3);\n\tconst nanos = now % 1e3 * 1e6;\n\tif (startTime) {\n\t\tlet diffSeconds = seconds - startTime[0];\n\t\tlet diffNanos = nanos - startTime[0];\n\t\tif (diffNanos < 0) {\n\t\t\tdiffSeconds = diffSeconds - 1;\n\t\t\tdiffNanos = 1e9 + diffNanos;\n\t\t}\n\t\treturn [diffSeconds, diffNanos];\n\t}\n\treturn [seconds, nanos];\n}, { bigint: function bigint() {\n\treturn BigInt(Date.now() * 1e6);\n} });\n", "import { EventEmitter } from \"node:events\";\nimport { ReadStream, WriteStream } from \"node:tty\";\nimport { notImplemented, createNotImplementedError } from \"../../../_internal/utils.mjs\";\nimport { NODE_VERSION } from \"./node-version.mjs\";\nexport class Process extends EventEmitter {\n\tenv;\n\thrtime;\n\tnextTick;\n\tconstructor(impl) {\n\t\tsuper();\n\t\tthis.env = impl.env;\n\t\tthis.hrtime = impl.hrtime;\n\t\tthis.nextTick = impl.nextTick;\n\t\tfor (const prop of [...Object.getOwnPropertyNames(Process.prototype), ...Object.getOwnPropertyNames(EventEmitter.prototype)]) {\n\t\t\tconst value = this[prop];\n\t\t\tif (typeof value === \"function\") {\n\t\t\t\tthis[prop] = value.bind(this);\n\t\t\t}\n\t\t}\n\t}\n\temitWarning(warning, type, code) {\n\t\tconsole.warn(`${code ? `[${code}] ` : \"\"}${type ? `${type}: ` : \"\"}${warning}`);\n\t}\n\temit(...args) {\n\t\treturn super.emit(...args);\n\t}\n\tlisteners(eventName) {\n\t\treturn super.listeners(eventName);\n\t}\n\t#stdin;\n\t#stdout;\n\t#stderr;\n\tget stdin() {\n\t\treturn this.#stdin ??= new ReadStream(0);\n\t}\n\tget stdout() {\n\t\treturn this.#stdout ??= new WriteStream(1);\n\t}\n\tget stderr() {\n\t\treturn this.#stderr ??= new WriteStream(2);\n\t}\n\t#cwd = \"/\";\n\tchdir(cwd) {\n\t\tthis.#cwd = cwd;\n\t}\n\tcwd() {\n\t\treturn this.#cwd;\n\t}\n\tarch = \"\";\n\tplatform = \"\";\n\targv = [];\n\targv0 = \"\";\n\texecArgv = [];\n\texecPath = \"\";\n\ttitle = \"\";\n\tpid = 200;\n\tppid = 100;\n\tget version() {\n\t\treturn `v${NODE_VERSION}`;\n\t}\n\tget versions() {\n\t\treturn { node: NODE_VERSION };\n\t}\n\tget allowedNodeEnvironmentFlags() {\n\t\treturn new Set();\n\t}\n\tget sourceMapsEnabled() {\n\t\treturn false;\n\t}\n\tget debugPort() {\n\t\treturn 0;\n\t}\n\tget throwDeprecation() {\n\t\treturn false;\n\t}\n\tget traceDeprecation() {\n\t\treturn false;\n\t}\n\tget features() {\n\t\treturn {};\n\t}\n\tget release() {\n\t\treturn {};\n\t}\n\tget connected() {\n\t\treturn false;\n\t}\n\tget config() {\n\t\treturn {};\n\t}\n\tget moduleLoadList() {\n\t\treturn [];\n\t}\n\tconstrainedMemory() {\n\t\treturn 0;\n\t}\n\tavailableMemory() {\n\t\treturn 0;\n\t}\n\tuptime() {\n\t\treturn 0;\n\t}\n\tresourceUsage() {\n\t\treturn {};\n\t}\n\tref() {}\n\tunref() {}\n\tumask() {\n\t\tthrow createNotImplementedError(\"process.umask\");\n\t}\n\tgetBuiltinModule() {\n\t\treturn undefined;\n\t}\n\tgetActiveResourcesInfo() {\n\t\tthrow createNotImplementedError(\"process.getActiveResourcesInfo\");\n\t}\n\texit() {\n\t\tthrow createNotImplementedError(\"process.exit\");\n\t}\n\treallyExit() {\n\t\tthrow createNotImplementedError(\"process.reallyExit\");\n\t}\n\tkill() {\n\t\tthrow createNotImplementedError(\"process.kill\");\n\t}\n\tabort() {\n\t\tthrow createNotImplementedError(\"process.abort\");\n\t}\n\tdlopen() {\n\t\tthrow createNotImplementedError(\"process.dlopen\");\n\t}\n\tsetSourceMapsEnabled() {\n\t\tthrow createNotImplementedError(\"process.setSourceMapsEnabled\");\n\t}\n\tloadEnvFile() {\n\t\tthrow createNotImplementedError(\"process.loadEnvFile\");\n\t}\n\tdisconnect() {\n\t\tthrow createNotImplementedError(\"process.disconnect\");\n\t}\n\tcpuUsage() {\n\t\tthrow createNotImplementedError(\"process.cpuUsage\");\n\t}\n\tsetUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.setUncaughtExceptionCaptureCallback\");\n\t}\n\thasUncaughtExceptionCaptureCallback() {\n\t\tthrow createNotImplementedError(\"process.hasUncaughtExceptionCaptureCallback\");\n\t}\n\tinitgroups() {\n\t\tthrow createNotImplementedError(\"process.initgroups\");\n\t}\n\topenStdin() {\n\t\tthrow createNotImplementedError(\"process.openStdin\");\n\t}\n\tassert() {\n\t\tthrow createNotImplementedError(\"process.assert\");\n\t}\n\tbinding() {\n\t\tthrow createNotImplementedError(\"process.binding\");\n\t}\n\tpermission = { has: /* @__PURE__ */ notImplemented(\"process.permission.has\") };\n\treport = {\n\t\tdirectory: \"\",\n\t\tfilename: \"\",\n\t\tsignal: \"SIGUSR2\",\n\t\tcompact: false,\n\t\treportOnFatalError: false,\n\t\treportOnSignal: false,\n\t\treportOnUncaughtException: false,\n\t\tgetReport: /* @__PURE__ */ notImplemented(\"process.report.getReport\"),\n\t\twriteReport: /* @__PURE__ */ notImplemented(\"process.report.writeReport\")\n\t};\n\tfinalization = {\n\t\tregister: /* @__PURE__ */ notImplemented(\"process.finalization.register\"),\n\t\tunregister: /* @__PURE__ */ notImplemented(\"process.finalization.unregister\"),\n\t\tregisterBeforeExit: /* @__PURE__ */ notImplemented(\"process.finalization.registerBeforeExit\")\n\t};\n\tmemoryUsage = Object.assign(() => ({\n\t\tarrayBuffers: 0,\n\t\trss: 0,\n\t\texternal: 0,\n\t\theapTotal: 0,\n\t\theapUsed: 0\n\t}), { rss: () => 0 });\n\tmainModule = undefined;\n\tdomain = undefined;\n\tsend = undefined;\n\texitCode = undefined;\n\tchannel = undefined;\n\tgetegid = undefined;\n\tgeteuid = undefined;\n\tgetgid = undefined;\n\tgetgroups = undefined;\n\tgetuid = undefined;\n\tsetegid = undefined;\n\tseteuid = undefined;\n\tsetgid = undefined;\n\tsetgroups = undefined;\n\tsetuid = undefined;\n\t_events = undefined;\n\t_eventsCount = undefined;\n\t_exiting = undefined;\n\t_maxListeners = undefined;\n\t_debugEnd = undefined;\n\t_debugProcess = undefined;\n\t_fatalException = undefined;\n\t_getActiveHandles = undefined;\n\t_getActiveRequests = undefined;\n\t_kill = undefined;\n\t_preload_modules = undefined;\n\t_rawDebug = undefined;\n\t_startProfilerIdleNotifier = undefined;\n\t_stopProfilerIdleNotifier = undefined;\n\t_tickCallback = undefined;\n\t_disconnect = undefined;\n\t_handleQueue = undefined;\n\t_pendingMessage = undefined;\n\t_channel = undefined;\n\t_send = undefined;\n\t_linkedBinding = undefined;\n}\n", "export class WriteStream {\n\tfd;\n\tcolumns = 80;\n\trows = 24;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tclearLine(dir, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tclearScreenDown(callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tcursorTo(x, y, callback) {\n\t\tcallback && typeof callback === \"function\" && callback();\n\t\treturn false;\n\t}\n\tmoveCursor(dx, dy, callback) {\n\t\tcallback && callback();\n\t\treturn false;\n\t}\n\tgetColorDepth(env) {\n\t\treturn 1;\n\t}\n\thasColors(count, env) {\n\t\treturn false;\n\t}\n\tgetWindowSize() {\n\t\treturn [this.columns, this.rows];\n\t}\n\twrite(str, encoding, cb) {\n\t\tif (str instanceof Uint8Array) {\n\t\t\tstr = new TextDecoder().decode(str);\n\t\t}\n\t\ttry {\n\t\t\tconsole.log(str);\n\t\t} catch {}\n\t\tcb && typeof cb === \"function\" && cb();\n\t\treturn false;\n\t}\n}\n", "export class ReadStream {\n\tfd;\n\tisRaw = false;\n\tisTTY = false;\n\tconstructor(fd) {\n\t\tthis.fd = fd;\n\t}\n\tsetRawMode(mode) {\n\t\tthis.isRaw = mode;\n\t\treturn this;\n\t}\n}\n", "export const NODE_VERSION = \"22.14.0\";\n", "import { hrtime as UnenvHrTime } from \"unenv/node/internal/process/hrtime\";\nimport { Process as UnenvProcess } from \"unenv/node/internal/process/process\";\nconst globalProcess = globalThis[\"process\"];\nexport const getBuiltinModule = globalProcess.getBuiltinModule;\nexport const { exit, platform, nextTick } = getBuiltinModule(\n  \"node:process\"\n);\nconst unenvProcess = new UnenvProcess({\n  env: globalProcess.env,\n  hrtime: UnenvHrTime,\n  nextTick\n});\nexport const {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  finalization,\n  features,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  on,\n  off,\n  once,\n  pid,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n} = unenvProcess;\nconst _process = {\n  abort,\n  addListener,\n  allowedNodeEnvironmentFlags,\n  hasUncaughtExceptionCaptureCallback,\n  setUncaughtExceptionCaptureCallback,\n  loadEnvFile,\n  sourceMapsEnabled,\n  arch,\n  argv,\n  argv0,\n  chdir,\n  config,\n  connected,\n  constrainedMemory,\n  availableMemory,\n  cpuUsage,\n  cwd,\n  debugPort,\n  dlopen,\n  disconnect,\n  emit,\n  emitWarning,\n  env,\n  eventNames,\n  execArgv,\n  execPath,\n  exit,\n  finalization,\n  features,\n  getBuiltinModule,\n  getActiveResourcesInfo,\n  getMaxListeners,\n  hrtime,\n  kill,\n  listeners,\n  listenerCount,\n  memoryUsage,\n  nextTick,\n  on,\n  off,\n  once,\n  pid,\n  platform,\n  ppid,\n  prependListener,\n  prependOnceListener,\n  rawListeners,\n  release,\n  removeAllListeners,\n  removeListener,\n  report,\n  resourceUsage,\n  setMaxListeners,\n  setSourceMapsEnabled,\n  stderr,\n  stdin,\n  stdout,\n  title,\n  throwDeprecation,\n  traceDeprecation,\n  umask,\n  uptime,\n  version,\n  versions,\n  // @ts-expect-error old API\n  domain,\n  initgroups,\n  moduleLoadList,\n  reallyExit,\n  openStdin,\n  assert,\n  binding,\n  send,\n  exitCode,\n  channel,\n  getegid,\n  geteuid,\n  getgid,\n  getgroups,\n  getuid,\n  setegid,\n  seteuid,\n  setgid,\n  setgroups,\n  setuid,\n  permission,\n  mainModule,\n  _events,\n  _eventsCount,\n  _exiting,\n  _maxListeners,\n  _debugEnd,\n  _debugProcess,\n  _fatalException,\n  _getActiveHandles,\n  _getActiveRequests,\n  _kill,\n  _preload_modules,\n  _rawDebug,\n  _startProfilerIdleNotifier,\n  _stopProfilerIdleNotifier,\n  _tickCallback,\n  _disconnect,\n  _handleQueue,\n  _pendingMessage,\n  _channel,\n  _send,\n  _linkedBinding\n};\nexport default _process;\n", "import { default as defaultExport } from \"@cloudflare/unenv-preset/node/process\";\nglobalThis.process = defaultExport;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "import { D1Database } from '@cloudflare/workers-types';\nimport { QuitaArticleSummary } from '../../domain/quita-domain';\nimport { D1Repository } from '../../repo/d1-repo';\n\nexport interface D1Client {\n  query<T = unknown>(sql: string, params?: readonly unknown[]): Promise<D1Result<T>>;\n  insert(sql: string, params?: readonly unknown[]): Promise<D1Result<unknown>>;\n}\n\nexport interface D1Result<T> {\n  results: T[];\n  success: boolean;\n  meta: {\n    changes: number;\n    last_row_id: number;\n    duration: number;\n  };\n}\n\nexport class CloudflareD1Client implements D1Client {\n  constructor(private db: D1Database) {}\n\n  query<T = unknown>(sql: string, params?: readonly unknown[]): Promise<D1Result<T>> {\n    return this.db\n      .prepare(sql)\n      .bind(...(params || []))\n      .all<T>();\n  }\n\n  async insert(sql: string, params?: readonly unknown[]): Promise<D1Result<unknown>> {\n    return this.db\n      .prepare(sql)\n      .bind(...(params || []))\n      .run();\n  }\n}\n\n// D1\u30AF\u30E9\u30A4\u30A2\u30F3\u30C8\u306E\u30D5\u30A1\u30AF\u30C8\u30EA\u30FC\u95A2\u6570\nexport function createD1Client(db: D1Database): D1Client {\n  return new CloudflareD1Client(db);\n}\n\n// D1\u30EA\u30DD\u30B8\u30C8\u30EA\u306E\u5B9F\u88C5\nexport class CloudflareD1Repository implements D1Repository {\n  constructor(private d1Client: D1Client) {}\n\n  async saveArticleSummary(summary: QuitaArticleSummary): Promise<void> {\n    // \u307E\u305A\u5143\u8A18\u4E8B\u306E\u60C5\u5831\u3092\u4FDD\u5B58\n    const articleSql = `\n      INSERT OR REPLACE INTO articles (\n        id, title, url, likes_count, created_at, updated_at, \n        user_id, user_name, body, rendered_body\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `;\n\n    await this.d1Client.insert(articleSql, [\n      summary.originalArticle.id,\n      summary.originalArticle.title,\n      summary.originalArticle.url,\n      summary.originalArticle.likes_count,\n      summary.originalArticle.created_at,\n      summary.originalArticle.updated_at,\n      summary.originalArticle.user.id,\n      summary.originalArticle.user.name,\n      summary.originalArticle.body,\n      summary.originalArticle.rendered_body,\n    ]);\n\n    // \u30BF\u30B0\u60C5\u5831\u3092\u4FDD\u5B58\n    for (const tag of summary.originalArticle.tags) {\n      const tagSql = `\n        INSERT OR REPLACE INTO article_tags (\n          article_id, tag_name, tag_versions\n        ) VALUES (?, ?, ?)\n      `;\n\n      await this.d1Client.insert(tagSql, [\n        summary.originalArticle.id,\n        tag.name,\n        JSON.stringify(tag.versions),\n      ]);\n    }\n\n    // \u8A18\u4E8B\u30B5\u30DE\u30EA\u30FC\u3092\u4FDD\u5B58\n    const summarySql = `\n      INSERT OR REPLACE INTO article_summaries (\n        id, title, url, summary_heading, summary_catch, summary_text, \n        target_audience, disclaimer, created_at, updated_at, original_article_id, keyword\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `;\n\n    await this.d1Client.insert(summarySql, [\n      summary.id,\n      summary.title,\n      summary.url,\n      summary.summary.heading,\n      summary.summary.catch,\n      summary.summary.summaryText,\n      summary.summary.targetAudience,\n      summary.disclaimer,\n      summary.created_at,\n      summary.updated_at,\n      summary.originalArticle.id,\n      summary.keyword,\n    ]);\n  }\n\n  async getAllArticleSummaries(): Promise<QuitaArticleSummary[]> {\n    const sql = `\n      SELECT \n        s.id, s.title, s.url, s.summary_heading, s.summary_catch, s.summary_text, \n        s.target_audience, s.disclaimer, s.created_at, s.updated_at, s.keyword,\n        a.id as original_article_id, a.title as original_article_title, a.url as original_article_url,\n        a.likes_count, a.created_at as original_article_created_at, a.updated_at as original_article_updated_at,\n        a.user_id, a.user_name, a.body, a.rendered_body\n      FROM article_summaries s\n      LEFT JOIN articles a ON s.original_article_id = a.id\n      ORDER BY s.created_at DESC\n    `;\n\n    const result = await this.d1Client.query<{\n      id: string;\n      title: string;\n      url: string;\n      summary_heading: string;\n      summary_catch: string;\n      summary_text: string;\n      target_audience: string;\n      disclaimer: string;\n      created_at: string;\n      updated_at: string;\n      keyword: string;\n      original_article_id: string;\n      original_article_title: string;\n      original_article_url: string;\n      likes_count: number;\n      original_article_created_at: string;\n      original_article_updated_at: string;\n      user_id: string;\n      user_name: string;\n      body: string;\n      rendered_body: string;\n    }>(sql);\n\n    const summaries: QuitaArticleSummary[] = [];\n\n    for (const row of result.results) {\n      // \u5404\u8A18\u4E8B\u306E\u30BF\u30B0\u60C5\u5831\u3092\u53D6\u5F97\n      const tagSql = `\n        SELECT tag_name, tag_versions\n        FROM article_tags\n        WHERE article_id = ?\n      `;\n\n      const tagResult = await this.d1Client.query<{\n        tag_name: string;\n        tag_versions: string;\n      }>(tagSql, [row.original_article_id]);\n\n      const tags = tagResult.results.map((tag) => ({\n        name: tag.tag_name,\n        versions: JSON.parse(tag.tag_versions) as readonly string[],\n      }));\n\n      summaries.push({\n        id: row.id,\n        title: row.title,\n        url: row.url,\n        summary: {\n          heading: row.summary_heading,\n          catch: row.summary_catch,\n          summaryText: row.summary_text,\n          targetAudience: row.target_audience,\n        },\n        disclaimer: row.disclaimer,\n        created_at: row.created_at,\n        updated_at: row.updated_at,\n        originalArticle: {\n          id: row.original_article_id,\n          title: row.original_article_title,\n          url: row.original_article_url,\n          likes_count: row.likes_count,\n          created_at: row.original_article_created_at,\n          user: {\n            id: row.user_id,\n            name: row.user_name,\n          },\n          tags,\n          body: row.body,\n          rendered_body: row.rendered_body,\n          updated_at: row.original_article_updated_at,\n        },\n        keyword: row.keyword,\n      });\n    }\n\n    return summaries;\n  }\n\n  async getArticleSummaryById(id: string): Promise<QuitaArticleSummary | null> {\n    const sql = `\n      SELECT \n        s.id, s.title, s.url, s.summary_heading, s.summary_catch, s.summary_text, \n        s.target_audience, s.disclaimer, s.created_at, s.updated_at, s.keyword,\n        a.id as original_article_id, a.title as original_article_title, a.url as original_article_url,\n        a.likes_count, a.created_at as original_article_created_at, a.updated_at as original_article_updated_at,\n        a.user_id, a.user_name, a.body, a.rendered_body\n      FROM article_summaries s\n      LEFT JOIN articles a ON s.original_article_id = a.id\n      WHERE s.id = ?\n    `;\n\n    const result = await this.d1Client.query<{\n      id: string;\n      title: string;\n      url: string;\n      summary_heading: string;\n      summary_catch: string;\n      summary_text: string;\n      target_audience: string;\n      disclaimer: string;\n      created_at: string;\n      updated_at: string;\n      keyword: string;\n      original_article_id: string;\n      original_article_title: string;\n      original_article_url: string;\n      likes_count: number;\n      original_article_created_at: string;\n      original_article_updated_at: string;\n      user_id: string;\n      user_name: string;\n      body: string;\n      rendered_body: string;\n    }>(sql, [id]);\n\n    if (result.results.length === 0) {\n      return null;\n    }\n\n    const summaryData = result.results[0];\n\n    // \u30BF\u30B0\u60C5\u5831\u3092\u53D6\u5F97\n    const tagSql = `\n      SELECT tag_name, tag_versions\n      FROM article_tags\n      WHERE article_id = ?\n    `;\n\n    const tagResult = await this.d1Client.query<{\n      tag_name: string;\n      tag_versions: string;\n    }>(tagSql, [summaryData.original_article_id]);\n\n    const tags = tagResult.results.map((tag) => ({\n      name: tag.tag_name,\n      versions: JSON.parse(tag.tag_versions) as readonly string[],\n    }));\n\n    return {\n      id: summaryData.id,\n      title: summaryData.title,\n      url: summaryData.url,\n      summary: {\n        heading: summaryData.summary_heading,\n        catch: summaryData.summary_catch,\n        summaryText: summaryData.summary_text,\n        targetAudience: summaryData.target_audience,\n      },\n      disclaimer: summaryData.disclaimer,\n      created_at: summaryData.created_at,\n      updated_at: summaryData.updated_at,\n      originalArticle: {\n        id: summaryData.original_article_id,\n        title: summaryData.original_article_title,\n        url: summaryData.original_article_url,\n        likes_count: summaryData.likes_count,\n        created_at: summaryData.original_article_created_at,\n        user: {\n          id: summaryData.user_id,\n          name: summaryData.user_name,\n        },\n        tags,\n        body: summaryData.body,\n        rendered_body: summaryData.rendered_body,\n        updated_at: summaryData.original_article_updated_at,\n      },\n      keyword: summaryData.keyword,\n    };\n  }\n}\n\n// D1\u30EA\u30DD\u30B8\u30C8\u30EA\u306E\u30D5\u30A1\u30AF\u30C8\u30EA\u30FC\u95A2\u6570\nexport function createD1Repository(d1Client: D1Client): D1Repository {\n  return new CloudflareD1Repository(d1Client);\n}\n", "import { notImplemented, notImplementedClass } from \"../../../_internal/utils.mjs\";\nimport { getRandomValues } from \"./web.mjs\";\nconst MAX_RANDOM_VALUE_BYTES = 65536;\nexport const webcrypto = new Proxy(globalThis.crypto, { get(_, key) {\n\tif (key === \"CryptoKey\") {\n\t\treturn globalThis.CryptoKey;\n\t}\n\tif (typeof globalThis.crypto[key] === \"function\") {\n\t\treturn globalThis.crypto[key].bind(globalThis.crypto);\n\t}\n\treturn globalThis.crypto[key];\n} });\nexport const randomBytes = (size, cb) => {\n\tconst bytes = Buffer.alloc(size, 0, undefined);\n\tfor (let generated = 0; generated < size; generated += MAX_RANDOM_VALUE_BYTES) {\n\t\tgetRandomValues(\n\t\t\t// Use subarray to get a view of the buffer\n\t\t\tUint8Array.prototype.subarray.call(bytes, generated, generated + MAX_RANDOM_VALUE_BYTES)\n);\n\t}\n\tif (typeof cb === \"function\") {\n\t\tcb(null, bytes);\n\t\treturn undefined;\n\t}\n\treturn bytes;\n};\nexport const rng = randomBytes;\nexport const prng = randomBytes;\nexport const fips = false;\nexport const checkPrime = /* @__PURE__ */ notImplemented(\"crypto.checkPrime\");\nexport const checkPrimeSync = /* @__PURE__ */ notImplemented(\"crypto.checkPrimeSync\");\n/** @deprecated */\nexport const createCipher = /* @__PURE__ */ notImplemented(\"crypto.createCipher\");\n/** @deprecated */\nexport const createDecipher = /* @__PURE__ */ notImplemented(\"crypto.createDecipher\");\nexport const pseudoRandomBytes = /* @__PURE__ */ notImplemented(\"crypto.pseudoRandomBytes\");\nexport const createCipheriv = /* @__PURE__ */ notImplemented(\"crypto.createCipheriv\");\nexport const createDecipheriv = /* @__PURE__ */ notImplemented(\"crypto.createDecipheriv\");\nexport const createDiffieHellman = /* @__PURE__ */ notImplemented(\"crypto.createDiffieHellman\");\nexport const createDiffieHellmanGroup = /* @__PURE__ */ notImplemented(\"crypto.createDiffieHellmanGroup\");\nexport const createECDH = /* @__PURE__ */ notImplemented(\"crypto.createECDH\");\nexport const createHash = /* @__PURE__ */ notImplemented(\"crypto.createHash\");\nexport const createHmac = /* @__PURE__ */ notImplemented(\"crypto.createHmac\");\nexport const createPrivateKey = /* @__PURE__ */ notImplemented(\"crypto.createPrivateKey\");\nexport const createPublicKey = /* @__PURE__ */ notImplemented(\"crypto.createPublicKey\");\nexport const createSecretKey = /* @__PURE__ */ notImplemented(\"crypto.createSecretKey\");\nexport const createSign = /* @__PURE__ */ notImplemented(\"crypto.createSign\");\nexport const createVerify = /* @__PURE__ */ notImplemented(\"crypto.createVerify\");\nexport const diffieHellman = /* @__PURE__ */ notImplemented(\"crypto.diffieHellman\");\nexport const generatePrime = /* @__PURE__ */ notImplemented(\"crypto.generatePrime\");\nexport const generatePrimeSync = /* @__PURE__ */ notImplemented(\"crypto.generatePrimeSync\");\nexport const getCiphers = /* @__PURE__ */ notImplemented(\"crypto.getCiphers\");\nexport const getCipherInfo = /* @__PURE__ */ notImplemented(\"crypto.getCipherInfo\");\nexport const getCurves = /* @__PURE__ */ notImplemented(\"crypto.getCurves\");\nexport const getDiffieHellman = /* @__PURE__ */ notImplemented(\"crypto.getDiffieHellman\");\nexport const getHashes = /* @__PURE__ */ notImplemented(\"crypto.getHashes\");\nexport const hkdf = /* @__PURE__ */ notImplemented(\"crypto.hkdf\");\nexport const hkdfSync = /* @__PURE__ */ notImplemented(\"crypto.hkdfSync\");\nexport const pbkdf2 = /* @__PURE__ */ notImplemented(\"crypto.pbkdf2\");\nexport const pbkdf2Sync = /* @__PURE__ */ notImplemented(\"crypto.pbkdf2Sync\");\nexport const generateKeyPair = /* @__PURE__ */ notImplemented(\"crypto.generateKeyPair\");\nexport const generateKeyPairSync = /* @__PURE__ */ notImplemented(\"crypto.generateKeyPairSync\");\nexport const generateKey = /* @__PURE__ */ notImplemented(\"crypto.generateKey\");\nexport const generateKeySync = /* @__PURE__ */ notImplemented(\"crypto.generateKeySync\");\nexport const privateDecrypt = /* @__PURE__ */ notImplemented(\"crypto.privateDecrypt\");\nexport const privateEncrypt = /* @__PURE__ */ notImplemented(\"crypto.privateEncrypt\");\nexport const publicDecrypt = /* @__PURE__ */ notImplemented(\"crypto.publicDecrypt\");\nexport const publicEncrypt = /* @__PURE__ */ notImplemented(\"crypto.publicEncrypt\");\nexport const randomFill = /* @__PURE__ */ notImplemented(\"crypto.randomFill\");\nexport const randomFillSync = /* @__PURE__ */ notImplemented(\"crypto.randomFillSync\");\nexport const randomInt = /* @__PURE__ */ notImplemented(\"crypto.randomInt\");\nexport const scrypt = /* @__PURE__ */ notImplemented(\"crypto.scrypt\");\nexport const scryptSync = /* @__PURE__ */ notImplemented(\"crypto.scryptSync\");\nexport const sign = /* @__PURE__ */ notImplemented(\"crypto.sign\");\nexport const setEngine = /* @__PURE__ */ notImplemented(\"crypto.setEngine\");\nexport const timingSafeEqual = /* @__PURE__ */ notImplemented(\"crypto.timingSafeEqual\");\nexport const getFips = /* @__PURE__ */ notImplemented(\"crypto.getFips\");\nexport const setFips = /* @__PURE__ */ notImplemented(\"crypto.setFips\");\nexport const verify = /* @__PURE__ */ notImplemented(\"crypto.verify\");\nexport const secureHeapUsed = /* @__PURE__ */ notImplemented(\"crypto.secureHeapUsed\");\nexport const hash = /* @__PURE__ */ notImplemented(\"crypto.hash\");\nexport const Certificate = /* @__PURE__ */ notImplementedClass(\"crypto.Certificate\");\nexport const Cipher = /* @__PURE__ */ notImplementedClass(\"crypto.Cipher\");\nexport const Cipheriv = /* @__PURE__ */ notImplementedClass(\n\t\"crypto.Cipheriv\"\n\t// @ts-expect-error not typed yet\n);\nexport const Decipher = /* @__PURE__ */ notImplementedClass(\"crypto.Decipher\");\nexport const Decipheriv = /* @__PURE__ */ notImplementedClass(\n\t\"crypto.Decipheriv\"\n\t// @ts-expect-error not typed yet\n);\nexport const DiffieHellman = /* @__PURE__ */ notImplementedClass(\"crypto.DiffieHellman\");\nexport const DiffieHellmanGroup = /* @__PURE__ */ notImplementedClass(\"crypto.DiffieHellmanGroup\");\nexport const ECDH = /* @__PURE__ */ notImplementedClass(\"crypto.ECDH\");\nexport const Hash = /* @__PURE__ */ notImplementedClass(\"crypto.Hash\");\nexport const Hmac = /* @__PURE__ */ notImplementedClass(\"crypto.Hmac\");\nexport const KeyObject = /* @__PURE__ */ notImplementedClass(\"crypto.KeyObject\");\nexport const Sign = /* @__PURE__ */ notImplementedClass(\"crypto.Sign\");\nexport const Verify = /* @__PURE__ */ notImplementedClass(\"crypto.Verify\");\nexport const X509Certificate = /* @__PURE__ */ notImplementedClass(\"crypto.X509Certificate\");\n", "import {\n  Cipher,\n  createCipher,\n  createDecipher,\n  Decipher,\n  pseudoRandomBytes,\n  webcrypto as unenvCryptoWebcrypto\n} from \"unenv/node/crypto\";\nexport { Cipher, Decipher } from \"unenv/node/crypto\";\nconst workerdCrypto = process.getBuiltinModule(\"node:crypto\");\nexport const {\n  Certificate,\n  checkPrime,\n  checkPrimeSync,\n  constants,\n  // @ts-expect-error\n  Cipheriv,\n  createCipheriv,\n  createDecipheriv,\n  createDiffieHellman,\n  createDiffieHellmanGroup,\n  createECDH,\n  createHash,\n  createHmac,\n  createPrivateKey,\n  createPublicKey,\n  createSecretKey,\n  createSign,\n  createVerify,\n  // @ts-expect-error\n  Decipheriv,\n  diffieHellman,\n  DiffieHellman,\n  DiffieHellmanGroup,\n  ECDH,\n  fips,\n  generateKey,\n  generateKeyPair,\n  generateKeyPairSync,\n  generateKeySync,\n  generatePrime,\n  generatePrimeSync,\n  getCipherInfo,\n  getCiphers,\n  getCurves,\n  getDiffieHellman,\n  getFips,\n  getHashes,\n  getRandomValues,\n  hash,\n  Hash,\n  hkdf,\n  hkdfSync,\n  Hmac,\n  KeyObject,\n  pbkdf2,\n  pbkdf2Sync,\n  privateDecrypt,\n  privateEncrypt,\n  publicDecrypt,\n  publicEncrypt,\n  randomBytes,\n  randomFill,\n  randomFillSync,\n  randomInt,\n  randomUUID,\n  scrypt,\n  scryptSync,\n  secureHeapUsed,\n  setEngine,\n  setFips,\n  sign,\n  Sign,\n  subtle,\n  timingSafeEqual,\n  verify,\n  Verify,\n  X509Certificate\n} = workerdCrypto;\nexport const webcrypto = {\n  // @ts-expect-error\n  CryptoKey: unenvCryptoWebcrypto.CryptoKey,\n  getRandomValues,\n  randomUUID,\n  subtle\n};\nexport default {\n  /**\n   * manually unroll unenv-polyfilled-symbols to make it tree-shakeable\n   */\n  Certificate,\n  Cipher,\n  Cipheriv,\n  Decipher,\n  Decipheriv,\n  ECDH,\n  Sign,\n  Verify,\n  X509Certificate,\n  constants,\n  createCipheriv,\n  createDecipheriv,\n  createECDH,\n  createSign,\n  createVerify,\n  diffieHellman,\n  getCipherInfo,\n  hash,\n  privateDecrypt,\n  privateEncrypt,\n  publicDecrypt,\n  publicEncrypt,\n  scrypt,\n  scryptSync,\n  sign,\n  verify,\n  // default-only export from unenv\n  // @ts-expect-error unenv has unknown type\n  createCipher,\n  // @ts-expect-error unenv has unknown type\n  createDecipher,\n  // @ts-expect-error unenv has unknown type\n  pseudoRandomBytes,\n  /**\n   * manually unroll workerd-polyfilled-symbols to make it tree-shakeable\n   */\n  DiffieHellman,\n  DiffieHellmanGroup,\n  Hash,\n  Hmac,\n  KeyObject,\n  checkPrime,\n  checkPrimeSync,\n  createDiffieHellman,\n  createDiffieHellmanGroup,\n  createHash,\n  createHmac,\n  createPrivateKey,\n  createPublicKey,\n  createSecretKey,\n  generateKey,\n  generateKeyPair,\n  generateKeyPairSync,\n  generateKeySync,\n  generatePrime,\n  generatePrimeSync,\n  getCiphers,\n  getCurves,\n  getDiffieHellman,\n  getFips,\n  getHashes,\n  getRandomValues,\n  hkdf,\n  hkdfSync,\n  pbkdf2,\n  pbkdf2Sync,\n  randomBytes,\n  randomFill,\n  randomFillSync,\n  randomInt,\n  randomUUID,\n  secureHeapUsed,\n  setEngine,\n  setFips,\n  subtle,\n  timingSafeEqual,\n  // default-only export from workerd\n  fips,\n  // special-cased deep merged symbols\n  webcrypto\n};\n", "/**\n * Contains the list of OpenAPI data types\n * as defined by https://swagger.io/docs/specification/data-models/data-types/\n * @public\n */\nvar SchemaType;\n(function (SchemaType) {\n    /** String type. */\n    SchemaType[\"STRING\"] = \"string\";\n    /** Number type. */\n    SchemaType[\"NUMBER\"] = \"number\";\n    /** Integer type. */\n    SchemaType[\"INTEGER\"] = \"integer\";\n    /** Boolean type. */\n    SchemaType[\"BOOLEAN\"] = \"boolean\";\n    /** Array type. */\n    SchemaType[\"ARRAY\"] = \"array\";\n    /** Object type. */\n    SchemaType[\"OBJECT\"] = \"object\";\n})(SchemaType || (SchemaType = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * @public\n */\nvar ExecutableCodeLanguage;\n(function (ExecutableCodeLanguage) {\n    ExecutableCodeLanguage[\"LANGUAGE_UNSPECIFIED\"] = \"language_unspecified\";\n    ExecutableCodeLanguage[\"PYTHON\"] = \"python\";\n})(ExecutableCodeLanguage || (ExecutableCodeLanguage = {}));\n/**\n * Possible outcomes of code execution.\n * @public\n */\nvar Outcome;\n(function (Outcome) {\n    /**\n     * Unspecified status. This value should not be used.\n     */\n    Outcome[\"OUTCOME_UNSPECIFIED\"] = \"outcome_unspecified\";\n    /**\n     * Code execution completed successfully.\n     */\n    Outcome[\"OUTCOME_OK\"] = \"outcome_ok\";\n    /**\n     * Code execution finished but with a failure. `stderr` should contain the\n     * reason.\n     */\n    Outcome[\"OUTCOME_FAILED\"] = \"outcome_failed\";\n    /**\n     * Code execution ran for too long, and was cancelled. There may or may not\n     * be a partial output present.\n     */\n    Outcome[\"OUTCOME_DEADLINE_EXCEEDED\"] = \"outcome_deadline_exceeded\";\n})(Outcome || (Outcome = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Possible roles.\n * @public\n */\nconst POSSIBLE_ROLES = [\"user\", \"model\", \"function\", \"system\"];\n/**\n * Harm categories that would cause prompts or candidates to be blocked.\n * @public\n */\nvar HarmCategory;\n(function (HarmCategory) {\n    HarmCategory[\"HARM_CATEGORY_UNSPECIFIED\"] = \"HARM_CATEGORY_UNSPECIFIED\";\n    HarmCategory[\"HARM_CATEGORY_HATE_SPEECH\"] = \"HARM_CATEGORY_HATE_SPEECH\";\n    HarmCategory[\"HARM_CATEGORY_SEXUALLY_EXPLICIT\"] = \"HARM_CATEGORY_SEXUALLY_EXPLICIT\";\n    HarmCategory[\"HARM_CATEGORY_HARASSMENT\"] = \"HARM_CATEGORY_HARASSMENT\";\n    HarmCategory[\"HARM_CATEGORY_DANGEROUS_CONTENT\"] = \"HARM_CATEGORY_DANGEROUS_CONTENT\";\n    HarmCategory[\"HARM_CATEGORY_CIVIC_INTEGRITY\"] = \"HARM_CATEGORY_CIVIC_INTEGRITY\";\n})(HarmCategory || (HarmCategory = {}));\n/**\n * Threshold above which a prompt or candidate will be blocked.\n * @public\n */\nvar HarmBlockThreshold;\n(function (HarmBlockThreshold) {\n    /** Threshold is unspecified. */\n    HarmBlockThreshold[\"HARM_BLOCK_THRESHOLD_UNSPECIFIED\"] = \"HARM_BLOCK_THRESHOLD_UNSPECIFIED\";\n    /** Content with NEGLIGIBLE will be allowed. */\n    HarmBlockThreshold[\"BLOCK_LOW_AND_ABOVE\"] = \"BLOCK_LOW_AND_ABOVE\";\n    /** Content with NEGLIGIBLE and LOW will be allowed. */\n    HarmBlockThreshold[\"BLOCK_MEDIUM_AND_ABOVE\"] = \"BLOCK_MEDIUM_AND_ABOVE\";\n    /** Content with NEGLIGIBLE, LOW, and MEDIUM will be allowed. */\n    HarmBlockThreshold[\"BLOCK_ONLY_HIGH\"] = \"BLOCK_ONLY_HIGH\";\n    /** All content will be allowed. */\n    HarmBlockThreshold[\"BLOCK_NONE\"] = \"BLOCK_NONE\";\n})(HarmBlockThreshold || (HarmBlockThreshold = {}));\n/**\n * Probability that a prompt or candidate matches a harm category.\n * @public\n */\nvar HarmProbability;\n(function (HarmProbability) {\n    /** Probability is unspecified. */\n    HarmProbability[\"HARM_PROBABILITY_UNSPECIFIED\"] = \"HARM_PROBABILITY_UNSPECIFIED\";\n    /** Content has a negligible chance of being unsafe. */\n    HarmProbability[\"NEGLIGIBLE\"] = \"NEGLIGIBLE\";\n    /** Content has a low chance of being unsafe. */\n    HarmProbability[\"LOW\"] = \"LOW\";\n    /** Content has a medium chance of being unsafe. */\n    HarmProbability[\"MEDIUM\"] = \"MEDIUM\";\n    /** Content has a high chance of being unsafe. */\n    HarmProbability[\"HIGH\"] = \"HIGH\";\n})(HarmProbability || (HarmProbability = {}));\n/**\n * Reason that a prompt was blocked.\n * @public\n */\nvar BlockReason;\n(function (BlockReason) {\n    // A blocked reason was not specified.\n    BlockReason[\"BLOCKED_REASON_UNSPECIFIED\"] = \"BLOCKED_REASON_UNSPECIFIED\";\n    // Content was blocked by safety settings.\n    BlockReason[\"SAFETY\"] = \"SAFETY\";\n    // Content was blocked, but the reason is uncategorized.\n    BlockReason[\"OTHER\"] = \"OTHER\";\n})(BlockReason || (BlockReason = {}));\n/**\n * Reason that a candidate finished.\n * @public\n */\nvar FinishReason;\n(function (FinishReason) {\n    // Default value. This value is unused.\n    FinishReason[\"FINISH_REASON_UNSPECIFIED\"] = \"FINISH_REASON_UNSPECIFIED\";\n    // Natural stop point of the model or provided stop sequence.\n    FinishReason[\"STOP\"] = \"STOP\";\n    // The maximum number of tokens as specified in the request was reached.\n    FinishReason[\"MAX_TOKENS\"] = \"MAX_TOKENS\";\n    // The candidate content was flagged for safety reasons.\n    FinishReason[\"SAFETY\"] = \"SAFETY\";\n    // The candidate content was flagged for recitation reasons.\n    FinishReason[\"RECITATION\"] = \"RECITATION\";\n    // The candidate content was flagged for using an unsupported language.\n    FinishReason[\"LANGUAGE\"] = \"LANGUAGE\";\n    // Token generation stopped because the content contains forbidden terms.\n    FinishReason[\"BLOCKLIST\"] = \"BLOCKLIST\";\n    // Token generation stopped for potentially containing prohibited content.\n    FinishReason[\"PROHIBITED_CONTENT\"] = \"PROHIBITED_CONTENT\";\n    // Token generation stopped because the content potentially contains Sensitive Personally Identifiable Information (SPII).\n    FinishReason[\"SPII\"] = \"SPII\";\n    // The function call generated by the model is invalid.\n    FinishReason[\"MALFORMED_FUNCTION_CALL\"] = \"MALFORMED_FUNCTION_CALL\";\n    // Unknown reason.\n    FinishReason[\"OTHER\"] = \"OTHER\";\n})(FinishReason || (FinishReason = {}));\n/**\n * Task type for embedding content.\n * @public\n */\nvar TaskType;\n(function (TaskType) {\n    TaskType[\"TASK_TYPE_UNSPECIFIED\"] = \"TASK_TYPE_UNSPECIFIED\";\n    TaskType[\"RETRIEVAL_QUERY\"] = \"RETRIEVAL_QUERY\";\n    TaskType[\"RETRIEVAL_DOCUMENT\"] = \"RETRIEVAL_DOCUMENT\";\n    TaskType[\"SEMANTIC_SIMILARITY\"] = \"SEMANTIC_SIMILARITY\";\n    TaskType[\"CLASSIFICATION\"] = \"CLASSIFICATION\";\n    TaskType[\"CLUSTERING\"] = \"CLUSTERING\";\n})(TaskType || (TaskType = {}));\n/**\n * @public\n */\nvar FunctionCallingMode;\n(function (FunctionCallingMode) {\n    // Unspecified function calling mode. This value should not be used.\n    FunctionCallingMode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    // Default model behavior, model decides to predict either a function call\n    // or a natural language repspose.\n    FunctionCallingMode[\"AUTO\"] = \"AUTO\";\n    // Model is constrained to always predicting a function call only.\n    // If \"allowed_function_names\" are set, the predicted function call will be\n    // limited to any one of \"allowed_function_names\", else the predicted\n    // function call will be any one of the provided \"function_declarations\".\n    FunctionCallingMode[\"ANY\"] = \"ANY\";\n    // Model will not predict any function call. Model behavior is same as when\n    // not passing any function declarations.\n    FunctionCallingMode[\"NONE\"] = \"NONE\";\n})(FunctionCallingMode || (FunctionCallingMode = {}));\n/**\n * The mode of the predictor to be used in dynamic retrieval.\n * @public\n */\nvar DynamicRetrievalMode;\n(function (DynamicRetrievalMode) {\n    // Unspecified function calling mode. This value should not be used.\n    DynamicRetrievalMode[\"MODE_UNSPECIFIED\"] = \"MODE_UNSPECIFIED\";\n    // Run retrieval only when system decides it is necessary.\n    DynamicRetrievalMode[\"MODE_DYNAMIC\"] = \"MODE_DYNAMIC\";\n})(DynamicRetrievalMode || (DynamicRetrievalMode = {}));\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Basic error type for this SDK.\n * @public\n */\nclass GoogleGenerativeAIError extends Error {\n    constructor(message) {\n        super(`[GoogleGenerativeAI Error]: ${message}`);\n    }\n}\n/**\n * Errors in the contents of a response from the model. This includes parsing\n * errors, or responses including a safety block reason.\n * @public\n */\nclass GoogleGenerativeAIResponseError extends GoogleGenerativeAIError {\n    constructor(message, response) {\n        super(message);\n        this.response = response;\n    }\n}\n/**\n * Error class covering HTTP errors when calling the server. Includes HTTP\n * status, statusText, and optional details, if provided in the server response.\n * @public\n */\nclass GoogleGenerativeAIFetchError extends GoogleGenerativeAIError {\n    constructor(message, status, statusText, errorDetails) {\n        super(message);\n        this.status = status;\n        this.statusText = statusText;\n        this.errorDetails = errorDetails;\n    }\n}\n/**\n * Errors in the contents of a request originating from user input.\n * @public\n */\nclass GoogleGenerativeAIRequestInputError extends GoogleGenerativeAIError {\n}\n/**\n * Error thrown when a request is aborted, either due to a timeout or\n * intentional cancellation by the user.\n * @public\n */\nclass GoogleGenerativeAIAbortError extends GoogleGenerativeAIError {\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst DEFAULT_BASE_URL = \"https://generativelanguage.googleapis.com\";\nconst DEFAULT_API_VERSION = \"v1beta\";\n/**\n * We can't `require` package.json if this runs on web. We will use rollup to\n * swap in the version number here at build time.\n */\nconst PACKAGE_VERSION = \"0.24.1\";\nconst PACKAGE_LOG_HEADER = \"genai-js\";\nvar Task;\n(function (Task) {\n    Task[\"GENERATE_CONTENT\"] = \"generateContent\";\n    Task[\"STREAM_GENERATE_CONTENT\"] = \"streamGenerateContent\";\n    Task[\"COUNT_TOKENS\"] = \"countTokens\";\n    Task[\"EMBED_CONTENT\"] = \"embedContent\";\n    Task[\"BATCH_EMBED_CONTENTS\"] = \"batchEmbedContents\";\n})(Task || (Task = {}));\nclass RequestUrl {\n    constructor(model, task, apiKey, stream, requestOptions) {\n        this.model = model;\n        this.task = task;\n        this.apiKey = apiKey;\n        this.stream = stream;\n        this.requestOptions = requestOptions;\n    }\n    toString() {\n        var _a, _b;\n        const apiVersion = ((_a = this.requestOptions) === null || _a === void 0 ? void 0 : _a.apiVersion) || DEFAULT_API_VERSION;\n        const baseUrl = ((_b = this.requestOptions) === null || _b === void 0 ? void 0 : _b.baseUrl) || DEFAULT_BASE_URL;\n        let url = `${baseUrl}/${apiVersion}/${this.model}:${this.task}`;\n        if (this.stream) {\n            url += \"?alt=sse\";\n        }\n        return url;\n    }\n}\n/**\n * Simple, but may become more complex if we add more versions to log.\n */\nfunction getClientHeaders(requestOptions) {\n    const clientHeaders = [];\n    if (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.apiClient) {\n        clientHeaders.push(requestOptions.apiClient);\n    }\n    clientHeaders.push(`${PACKAGE_LOG_HEADER}/${PACKAGE_VERSION}`);\n    return clientHeaders.join(\" \");\n}\nasync function getHeaders(url) {\n    var _a;\n    const headers = new Headers();\n    headers.append(\"Content-Type\", \"application/json\");\n    headers.append(\"x-goog-api-client\", getClientHeaders(url.requestOptions));\n    headers.append(\"x-goog-api-key\", url.apiKey);\n    let customHeaders = (_a = url.requestOptions) === null || _a === void 0 ? void 0 : _a.customHeaders;\n    if (customHeaders) {\n        if (!(customHeaders instanceof Headers)) {\n            try {\n                customHeaders = new Headers(customHeaders);\n            }\n            catch (e) {\n                throw new GoogleGenerativeAIRequestInputError(`unable to convert customHeaders value ${JSON.stringify(customHeaders)} to Headers: ${e.message}`);\n            }\n        }\n        for (const [headerName, headerValue] of customHeaders.entries()) {\n            if (headerName === \"x-goog-api-key\") {\n                throw new GoogleGenerativeAIRequestInputError(`Cannot set reserved header name ${headerName}`);\n            }\n            else if (headerName === \"x-goog-api-client\") {\n                throw new GoogleGenerativeAIRequestInputError(`Header name ${headerName} can only be set using the apiClient field`);\n            }\n            headers.append(headerName, headerValue);\n        }\n    }\n    return headers;\n}\nasync function constructModelRequest(model, task, apiKey, stream, body, requestOptions) {\n    const url = new RequestUrl(model, task, apiKey, stream, requestOptions);\n    return {\n        url: url.toString(),\n        fetchOptions: Object.assign(Object.assign({}, buildFetchOptions(requestOptions)), { method: \"POST\", headers: await getHeaders(url), body }),\n    };\n}\nasync function makeModelRequest(model, task, apiKey, stream, body, requestOptions = {}, \n// Allows this to be stubbed for tests\nfetchFn = fetch) {\n    const { url, fetchOptions } = await constructModelRequest(model, task, apiKey, stream, body, requestOptions);\n    return makeRequest(url, fetchOptions, fetchFn);\n}\nasync function makeRequest(url, fetchOptions, fetchFn = fetch) {\n    let response;\n    try {\n        response = await fetchFn(url, fetchOptions);\n    }\n    catch (e) {\n        handleResponseError(e, url);\n    }\n    if (!response.ok) {\n        await handleResponseNotOk(response, url);\n    }\n    return response;\n}\nfunction handleResponseError(e, url) {\n    let err = e;\n    if (err.name === \"AbortError\") {\n        err = new GoogleGenerativeAIAbortError(`Request aborted when fetching ${url.toString()}: ${e.message}`);\n        err.stack = e.stack;\n    }\n    else if (!(e instanceof GoogleGenerativeAIFetchError ||\n        e instanceof GoogleGenerativeAIRequestInputError)) {\n        err = new GoogleGenerativeAIError(`Error fetching from ${url.toString()}: ${e.message}`);\n        err.stack = e.stack;\n    }\n    throw err;\n}\nasync function handleResponseNotOk(response, url) {\n    let message = \"\";\n    let errorDetails;\n    try {\n        const json = await response.json();\n        message = json.error.message;\n        if (json.error.details) {\n            message += ` ${JSON.stringify(json.error.details)}`;\n            errorDetails = json.error.details;\n        }\n    }\n    catch (e) {\n        // ignored\n    }\n    throw new GoogleGenerativeAIFetchError(`Error fetching from ${url.toString()}: [${response.status} ${response.statusText}] ${message}`, response.status, response.statusText, errorDetails);\n}\n/**\n * Generates the request options to be passed to the fetch API.\n * @param requestOptions - The user-defined request options.\n * @returns The generated request options.\n */\nfunction buildFetchOptions(requestOptions) {\n    const fetchOptions = {};\n    if ((requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.signal) !== undefined || (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeout) >= 0) {\n        const controller = new AbortController();\n        if ((requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.timeout) >= 0) {\n            setTimeout(() => controller.abort(), requestOptions.timeout);\n        }\n        if (requestOptions === null || requestOptions === void 0 ? void 0 : requestOptions.signal) {\n            requestOptions.signal.addEventListener(\"abort\", () => {\n                controller.abort();\n            });\n        }\n        fetchOptions.signal = controller.signal;\n    }\n    return fetchOptions;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Adds convenience helper methods to a response object, including stream\n * chunks (as long as each chunk is a complete GenerateContentResponse JSON).\n */\nfunction addHelpers(response) {\n    response.text = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning text from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            return getText(response);\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Text not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return \"\";\n    };\n    /**\n     * TODO: remove at next major version\n     */\n    response.functionCall = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning function calls from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            console.warn(`response.functionCall() is deprecated. ` +\n                `Use response.functionCalls() instead.`);\n            return getFunctionCalls(response)[0];\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Function call not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return undefined;\n    };\n    response.functionCalls = () => {\n        if (response.candidates && response.candidates.length > 0) {\n            if (response.candidates.length > 1) {\n                console.warn(`This response had ${response.candidates.length} ` +\n                    `candidates. Returning function calls from the first candidate only. ` +\n                    `Access response.candidates directly to use the other candidates.`);\n            }\n            if (hadBadFinishReason(response.candidates[0])) {\n                throw new GoogleGenerativeAIResponseError(`${formatBlockErrorMessage(response)}`, response);\n            }\n            return getFunctionCalls(response);\n        }\n        else if (response.promptFeedback) {\n            throw new GoogleGenerativeAIResponseError(`Function call not available. ${formatBlockErrorMessage(response)}`, response);\n        }\n        return undefined;\n    };\n    return response;\n}\n/**\n * Returns all text found in all parts of first candidate.\n */\nfunction getText(response) {\n    var _a, _b, _c, _d;\n    const textStrings = [];\n    if ((_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) {\n        for (const part of (_d = (_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0].content) === null || _d === void 0 ? void 0 : _d.parts) {\n            if (part.text) {\n                textStrings.push(part.text);\n            }\n            if (part.executableCode) {\n                textStrings.push(\"\\n```\" +\n                    part.executableCode.language +\n                    \"\\n\" +\n                    part.executableCode.code +\n                    \"\\n```\\n\");\n            }\n            if (part.codeExecutionResult) {\n                textStrings.push(\"\\n```\\n\" + part.codeExecutionResult.output + \"\\n```\\n\");\n            }\n        }\n    }\n    if (textStrings.length > 0) {\n        return textStrings.join(\"\");\n    }\n    else {\n        return \"\";\n    }\n}\n/**\n * Returns functionCall of first candidate.\n */\nfunction getFunctionCalls(response) {\n    var _a, _b, _c, _d;\n    const functionCalls = [];\n    if ((_b = (_a = response.candidates) === null || _a === void 0 ? void 0 : _a[0].content) === null || _b === void 0 ? void 0 : _b.parts) {\n        for (const part of (_d = (_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0].content) === null || _d === void 0 ? void 0 : _d.parts) {\n            if (part.functionCall) {\n                functionCalls.push(part.functionCall);\n            }\n        }\n    }\n    if (functionCalls.length > 0) {\n        return functionCalls;\n    }\n    else {\n        return undefined;\n    }\n}\nconst badFinishReasons = [\n    FinishReason.RECITATION,\n    FinishReason.SAFETY,\n    FinishReason.LANGUAGE,\n];\nfunction hadBadFinishReason(candidate) {\n    return (!!candidate.finishReason &&\n        badFinishReasons.includes(candidate.finishReason));\n}\nfunction formatBlockErrorMessage(response) {\n    var _a, _b, _c;\n    let message = \"\";\n    if ((!response.candidates || response.candidates.length === 0) &&\n        response.promptFeedback) {\n        message += \"Response was blocked\";\n        if ((_a = response.promptFeedback) === null || _a === void 0 ? void 0 : _a.blockReason) {\n            message += ` due to ${response.promptFeedback.blockReason}`;\n        }\n        if ((_b = response.promptFeedback) === null || _b === void 0 ? void 0 : _b.blockReasonMessage) {\n            message += `: ${response.promptFeedback.blockReasonMessage}`;\n        }\n    }\n    else if ((_c = response.candidates) === null || _c === void 0 ? void 0 : _c[0]) {\n        const firstCandidate = response.candidates[0];\n        if (hadBadFinishReason(firstCandidate)) {\n            message += `Candidate was blocked due to ${firstCandidate.finishReason}`;\n            if (firstCandidate.finishMessage) {\n                message += `: ${firstCandidate.finishMessage}`;\n            }\n        }\n    }\n    return message;\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol */\r\n\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst responseLineRE = /^data\\: (.*)(?:\\n\\n|\\r\\r|\\r\\n\\r\\n)/;\n/**\n * Process a response.body stream from the backend and return an\n * iterator that provides one complete GenerateContentResponse at a time\n * and a promise that resolves with a single aggregated\n * GenerateContentResponse.\n *\n * @param response - Response from a fetch call\n */\nfunction processStream(response) {\n    const inputStream = response.body.pipeThrough(new TextDecoderStream(\"utf8\", { fatal: true }));\n    const responseStream = getResponseStream(inputStream);\n    const [stream1, stream2] = responseStream.tee();\n    return {\n        stream: generateResponseSequence(stream1),\n        response: getResponsePromise(stream2),\n    };\n}\nasync function getResponsePromise(stream) {\n    const allResponses = [];\n    const reader = stream.getReader();\n    while (true) {\n        const { done, value } = await reader.read();\n        if (done) {\n            return addHelpers(aggregateResponses(allResponses));\n        }\n        allResponses.push(value);\n    }\n}\nfunction generateResponseSequence(stream) {\n    return __asyncGenerator(this, arguments, function* generateResponseSequence_1() {\n        const reader = stream.getReader();\n        while (true) {\n            const { value, done } = yield __await(reader.read());\n            if (done) {\n                break;\n            }\n            yield yield __await(addHelpers(value));\n        }\n    });\n}\n/**\n * Reads a raw stream from the fetch response and join incomplete\n * chunks, returning a new stream that provides a single complete\n * GenerateContentResponse in each iteration.\n */\nfunction getResponseStream(inputStream) {\n    const reader = inputStream.getReader();\n    const stream = new ReadableStream({\n        start(controller) {\n            let currentText = \"\";\n            return pump();\n            function pump() {\n                return reader\n                    .read()\n                    .then(({ value, done }) => {\n                    if (done) {\n                        if (currentText.trim()) {\n                            controller.error(new GoogleGenerativeAIError(\"Failed to parse stream\"));\n                            return;\n                        }\n                        controller.close();\n                        return;\n                    }\n                    currentText += value;\n                    let match = currentText.match(responseLineRE);\n                    let parsedResponse;\n                    while (match) {\n                        try {\n                            parsedResponse = JSON.parse(match[1]);\n                        }\n                        catch (e) {\n                            controller.error(new GoogleGenerativeAIError(`Error parsing JSON response: \"${match[1]}\"`));\n                            return;\n                        }\n                        controller.enqueue(parsedResponse);\n                        currentText = currentText.substring(match[0].length);\n                        match = currentText.match(responseLineRE);\n                    }\n                    return pump();\n                })\n                    .catch((e) => {\n                    let err = e;\n                    err.stack = e.stack;\n                    if (err.name === \"AbortError\") {\n                        err = new GoogleGenerativeAIAbortError(\"Request aborted when reading from the stream\");\n                    }\n                    else {\n                        err = new GoogleGenerativeAIError(\"Error reading from the stream\");\n                    }\n                    throw err;\n                });\n            }\n        },\n    });\n    return stream;\n}\n/**\n * Aggregates an array of `GenerateContentResponse`s into a single\n * GenerateContentResponse.\n */\nfunction aggregateResponses(responses) {\n    const lastResponse = responses[responses.length - 1];\n    const aggregatedResponse = {\n        promptFeedback: lastResponse === null || lastResponse === void 0 ? void 0 : lastResponse.promptFeedback,\n    };\n    for (const response of responses) {\n        if (response.candidates) {\n            let candidateIndex = 0;\n            for (const candidate of response.candidates) {\n                if (!aggregatedResponse.candidates) {\n                    aggregatedResponse.candidates = [];\n                }\n                if (!aggregatedResponse.candidates[candidateIndex]) {\n                    aggregatedResponse.candidates[candidateIndex] = {\n                        index: candidateIndex,\n                    };\n                }\n                // Keep overwriting, the last one will be final\n                aggregatedResponse.candidates[candidateIndex].citationMetadata =\n                    candidate.citationMetadata;\n                aggregatedResponse.candidates[candidateIndex].groundingMetadata =\n                    candidate.groundingMetadata;\n                aggregatedResponse.candidates[candidateIndex].finishReason =\n                    candidate.finishReason;\n                aggregatedResponse.candidates[candidateIndex].finishMessage =\n                    candidate.finishMessage;\n                aggregatedResponse.candidates[candidateIndex].safetyRatings =\n                    candidate.safetyRatings;\n                /**\n                 * Candidates should always have content and parts, but this handles\n                 * possible malformed responses.\n                 */\n                if (candidate.content && candidate.content.parts) {\n                    if (!aggregatedResponse.candidates[candidateIndex].content) {\n                        aggregatedResponse.candidates[candidateIndex].content = {\n                            role: candidate.content.role || \"user\",\n                            parts: [],\n                        };\n                    }\n                    const newPart = {};\n                    for (const part of candidate.content.parts) {\n                        if (part.text) {\n                            newPart.text = part.text;\n                        }\n                        if (part.functionCall) {\n                            newPart.functionCall = part.functionCall;\n                        }\n                        if (part.executableCode) {\n                            newPart.executableCode = part.executableCode;\n                        }\n                        if (part.codeExecutionResult) {\n                            newPart.codeExecutionResult = part.codeExecutionResult;\n                        }\n                        if (Object.keys(newPart).length === 0) {\n                            newPart.text = \"\";\n                        }\n                        aggregatedResponse.candidates[candidateIndex].content.parts.push(newPart);\n                    }\n                }\n            }\n            candidateIndex++;\n        }\n        if (response.usageMetadata) {\n            aggregatedResponse.usageMetadata = response.usageMetadata;\n        }\n    }\n    return aggregatedResponse;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function generateContentStream(apiKey, model, params, requestOptions) {\n    const response = await makeModelRequest(model, Task.STREAM_GENERATE_CONTENT, apiKey, \n    /* stream */ true, JSON.stringify(params), requestOptions);\n    return processStream(response);\n}\nasync function generateContent(apiKey, model, params, requestOptions) {\n    const response = await makeModelRequest(model, Task.GENERATE_CONTENT, apiKey, \n    /* stream */ false, JSON.stringify(params), requestOptions);\n    const responseJson = await response.json();\n    const enhancedResponse = addHelpers(responseJson);\n    return {\n        response: enhancedResponse,\n    };\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction formatSystemInstruction(input) {\n    // null or undefined\n    if (input == null) {\n        return undefined;\n    }\n    else if (typeof input === \"string\") {\n        return { role: \"system\", parts: [{ text: input }] };\n    }\n    else if (input.text) {\n        return { role: \"system\", parts: [input] };\n    }\n    else if (input.parts) {\n        if (!input.role) {\n            return { role: \"system\", parts: input.parts };\n        }\n        else {\n            return input;\n        }\n    }\n}\nfunction formatNewContent(request) {\n    let newParts = [];\n    if (typeof request === \"string\") {\n        newParts = [{ text: request }];\n    }\n    else {\n        for (const partOrString of request) {\n            if (typeof partOrString === \"string\") {\n                newParts.push({ text: partOrString });\n            }\n            else {\n                newParts.push(partOrString);\n            }\n        }\n    }\n    return assignRoleToPartsAndValidateSendMessageRequest(newParts);\n}\n/**\n * When multiple Part types (i.e. FunctionResponsePart and TextPart) are\n * passed in a single Part array, we may need to assign different roles to each\n * part. Currently only FunctionResponsePart requires a role other than 'user'.\n * @private\n * @param parts Array of parts to pass to the model\n * @returns Array of content items\n */\nfunction assignRoleToPartsAndValidateSendMessageRequest(parts) {\n    const userContent = { role: \"user\", parts: [] };\n    const functionContent = { role: \"function\", parts: [] };\n    let hasUserContent = false;\n    let hasFunctionContent = false;\n    for (const part of parts) {\n        if (\"functionResponse\" in part) {\n            functionContent.parts.push(part);\n            hasFunctionContent = true;\n        }\n        else {\n            userContent.parts.push(part);\n            hasUserContent = true;\n        }\n    }\n    if (hasUserContent && hasFunctionContent) {\n        throw new GoogleGenerativeAIError(\"Within a single message, FunctionResponse cannot be mixed with other type of part in the request for sending chat message.\");\n    }\n    if (!hasUserContent && !hasFunctionContent) {\n        throw new GoogleGenerativeAIError(\"No content is provided for sending chat message.\");\n    }\n    if (hasUserContent) {\n        return userContent;\n    }\n    return functionContent;\n}\nfunction formatCountTokensInput(params, modelParams) {\n    var _a;\n    let formattedGenerateContentRequest = {\n        model: modelParams === null || modelParams === void 0 ? void 0 : modelParams.model,\n        generationConfig: modelParams === null || modelParams === void 0 ? void 0 : modelParams.generationConfig,\n        safetySettings: modelParams === null || modelParams === void 0 ? void 0 : modelParams.safetySettings,\n        tools: modelParams === null || modelParams === void 0 ? void 0 : modelParams.tools,\n        toolConfig: modelParams === null || modelParams === void 0 ? void 0 : modelParams.toolConfig,\n        systemInstruction: modelParams === null || modelParams === void 0 ? void 0 : modelParams.systemInstruction,\n        cachedContent: (_a = modelParams === null || modelParams === void 0 ? void 0 : modelParams.cachedContent) === null || _a === void 0 ? void 0 : _a.name,\n        contents: [],\n    };\n    const containsGenerateContentRequest = params.generateContentRequest != null;\n    if (params.contents) {\n        if (containsGenerateContentRequest) {\n            throw new GoogleGenerativeAIRequestInputError(\"CountTokensRequest must have one of contents or generateContentRequest, not both.\");\n        }\n        formattedGenerateContentRequest.contents = params.contents;\n    }\n    else if (containsGenerateContentRequest) {\n        formattedGenerateContentRequest = Object.assign(Object.assign({}, formattedGenerateContentRequest), params.generateContentRequest);\n    }\n    else {\n        // Array or string\n        const content = formatNewContent(params);\n        formattedGenerateContentRequest.contents = [content];\n    }\n    return { generateContentRequest: formattedGenerateContentRequest };\n}\nfunction formatGenerateContentInput(params) {\n    let formattedRequest;\n    if (params.contents) {\n        formattedRequest = params;\n    }\n    else {\n        // Array or string\n        const content = formatNewContent(params);\n        formattedRequest = { contents: [content] };\n    }\n    if (params.systemInstruction) {\n        formattedRequest.systemInstruction = formatSystemInstruction(params.systemInstruction);\n    }\n    return formattedRequest;\n}\nfunction formatEmbedContentInput(params) {\n    if (typeof params === \"string\" || Array.isArray(params)) {\n        const content = formatNewContent(params);\n        return { content };\n    }\n    return params;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// https://ai.google.dev/api/rest/v1beta/Content#part\nconst VALID_PART_FIELDS = [\n    \"text\",\n    \"inlineData\",\n    \"functionCall\",\n    \"functionResponse\",\n    \"executableCode\",\n    \"codeExecutionResult\",\n];\nconst VALID_PARTS_PER_ROLE = {\n    user: [\"text\", \"inlineData\"],\n    function: [\"functionResponse\"],\n    model: [\"text\", \"functionCall\", \"executableCode\", \"codeExecutionResult\"],\n    // System instructions shouldn't be in history anyway.\n    system: [\"text\"],\n};\nfunction validateChatHistory(history) {\n    let prevContent = false;\n    for (const currContent of history) {\n        const { role, parts } = currContent;\n        if (!prevContent && role !== \"user\") {\n            throw new GoogleGenerativeAIError(`First content should be with role 'user', got ${role}`);\n        }\n        if (!POSSIBLE_ROLES.includes(role)) {\n            throw new GoogleGenerativeAIError(`Each item should include role field. Got ${role} but valid roles are: ${JSON.stringify(POSSIBLE_ROLES)}`);\n        }\n        if (!Array.isArray(parts)) {\n            throw new GoogleGenerativeAIError(\"Content should have 'parts' property with an array of Parts\");\n        }\n        if (parts.length === 0) {\n            throw new GoogleGenerativeAIError(\"Each Content should have at least one part\");\n        }\n        const countFields = {\n            text: 0,\n            inlineData: 0,\n            functionCall: 0,\n            functionResponse: 0,\n            fileData: 0,\n            executableCode: 0,\n            codeExecutionResult: 0,\n        };\n        for (const part of parts) {\n            for (const key of VALID_PART_FIELDS) {\n                if (key in part) {\n                    countFields[key] += 1;\n                }\n            }\n        }\n        const validParts = VALID_PARTS_PER_ROLE[role];\n        for (const key of VALID_PART_FIELDS) {\n            if (!validParts.includes(key) && countFields[key] > 0) {\n                throw new GoogleGenerativeAIError(`Content with role '${role}' can't contain '${key}' part`);\n            }\n        }\n        prevContent = true;\n    }\n}\n/**\n * Returns true if the response is valid (could be appended to the history), flase otherwise.\n */\nfunction isValidResponse(response) {\n    var _a;\n    if (response.candidates === undefined || response.candidates.length === 0) {\n        return false;\n    }\n    const content = (_a = response.candidates[0]) === null || _a === void 0 ? void 0 : _a.content;\n    if (content === undefined) {\n        return false;\n    }\n    if (content.parts === undefined || content.parts.length === 0) {\n        return false;\n    }\n    for (const part of content.parts) {\n        if (part === undefined || Object.keys(part).length === 0) {\n            return false;\n        }\n        if (part.text !== undefined && part.text === \"\") {\n            return false;\n        }\n    }\n    return true;\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Do not log a message for this error.\n */\nconst SILENT_ERROR = \"SILENT_ERROR\";\n/**\n * ChatSession class that enables sending chat messages and stores\n * history of sent and received messages so far.\n *\n * @public\n */\nclass ChatSession {\n    constructor(apiKey, model, params, _requestOptions = {}) {\n        this.model = model;\n        this.params = params;\n        this._requestOptions = _requestOptions;\n        this._history = [];\n        this._sendPromise = Promise.resolve();\n        this._apiKey = apiKey;\n        if (params === null || params === void 0 ? void 0 : params.history) {\n            validateChatHistory(params.history);\n            this._history = params.history;\n        }\n    }\n    /**\n     * Gets the chat history so far. Blocked prompts are not added to history.\n     * Blocked candidates are not added to history, nor are the prompts that\n     * generated them.\n     */\n    async getHistory() {\n        await this._sendPromise;\n        return this._history;\n    }\n    /**\n     * Sends a chat message and receives a non-streaming\n     * {@link GenerateContentResult}.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async sendMessage(request, requestOptions = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        await this._sendPromise;\n        const newContent = formatNewContent(request);\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            tools: (_c = this.params) === null || _c === void 0 ? void 0 : _c.tools,\n            toolConfig: (_d = this.params) === null || _d === void 0 ? void 0 : _d.toolConfig,\n            systemInstruction: (_e = this.params) === null || _e === void 0 ? void 0 : _e.systemInstruction,\n            cachedContent: (_f = this.params) === null || _f === void 0 ? void 0 : _f.cachedContent,\n            contents: [...this._history, newContent],\n        };\n        const chatSessionRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        let finalResult;\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => generateContent(this._apiKey, this.model, generateContentRequest, chatSessionRequestOptions))\n            .then((result) => {\n            var _a;\n            if (isValidResponse(result.response)) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({ parts: [], \n                    // Response seems to come back without a role set.\n                    role: \"model\" }, (_a = result.response.candidates) === null || _a === void 0 ? void 0 : _a[0].content);\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(result.response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessage() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n            finalResult = result;\n        })\n            .catch((e) => {\n            // Resets _sendPromise to avoid subsequent calls failing and throw error.\n            this._sendPromise = Promise.resolve();\n            throw e;\n        });\n        await this._sendPromise;\n        return finalResult;\n    }\n    /**\n     * Sends a chat message and receives the response as a\n     * {@link GenerateContentStreamResult} containing an iterable stream\n     * and a response promise.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async sendMessageStream(request, requestOptions = {}) {\n        var _a, _b, _c, _d, _e, _f;\n        await this._sendPromise;\n        const newContent = formatNewContent(request);\n        const generateContentRequest = {\n            safetySettings: (_a = this.params) === null || _a === void 0 ? void 0 : _a.safetySettings,\n            generationConfig: (_b = this.params) === null || _b === void 0 ? void 0 : _b.generationConfig,\n            tools: (_c = this.params) === null || _c === void 0 ? void 0 : _c.tools,\n            toolConfig: (_d = this.params) === null || _d === void 0 ? void 0 : _d.toolConfig,\n            systemInstruction: (_e = this.params) === null || _e === void 0 ? void 0 : _e.systemInstruction,\n            cachedContent: (_f = this.params) === null || _f === void 0 ? void 0 : _f.cachedContent,\n            contents: [...this._history, newContent],\n        };\n        const chatSessionRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        const streamPromise = generateContentStream(this._apiKey, this.model, generateContentRequest, chatSessionRequestOptions);\n        // Add onto the chain.\n        this._sendPromise = this._sendPromise\n            .then(() => streamPromise)\n            // This must be handled to avoid unhandled rejection, but jump\n            // to the final catch block with a label to not log this error.\n            .catch((_ignored) => {\n            throw new Error(SILENT_ERROR);\n        })\n            .then((streamResult) => streamResult.response)\n            .then((response) => {\n            if (isValidResponse(response)) {\n                this._history.push(newContent);\n                const responseContent = Object.assign({}, response.candidates[0].content);\n                // Response seems to come back without a role set.\n                if (!responseContent.role) {\n                    responseContent.role = \"model\";\n                }\n                this._history.push(responseContent);\n            }\n            else {\n                const blockErrorMessage = formatBlockErrorMessage(response);\n                if (blockErrorMessage) {\n                    console.warn(`sendMessageStream() was unsuccessful. ${blockErrorMessage}. Inspect response object for details.`);\n                }\n            }\n        })\n            .catch((e) => {\n            // Errors in streamPromise are already catchable by the user as\n            // streamPromise is returned.\n            // Avoid duplicating the error message in logs.\n            if (e.message !== SILENT_ERROR) {\n                // Users do not have access to _sendPromise to catch errors\n                // downstream from streamPromise, so they should not throw.\n                console.error(e);\n            }\n        });\n        return streamPromise;\n    }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function countTokens(apiKey, model, params, singleRequestOptions) {\n    const response = await makeModelRequest(model, Task.COUNT_TOKENS, apiKey, false, JSON.stringify(params), singleRequestOptions);\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nasync function embedContent(apiKey, model, params, requestOptions) {\n    const response = await makeModelRequest(model, Task.EMBED_CONTENT, apiKey, false, JSON.stringify(params), requestOptions);\n    return response.json();\n}\nasync function batchEmbedContents(apiKey, model, params, requestOptions) {\n    const requestsWithModel = params.requests.map((request) => {\n        return Object.assign(Object.assign({}, request), { model });\n    });\n    const response = await makeModelRequest(model, Task.BATCH_EMBED_CONTENTS, apiKey, false, JSON.stringify({ requests: requestsWithModel }), requestOptions);\n    return response.json();\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Class for generative model APIs.\n * @public\n */\nclass GenerativeModel {\n    constructor(apiKey, modelParams, _requestOptions = {}) {\n        this.apiKey = apiKey;\n        this._requestOptions = _requestOptions;\n        if (modelParams.model.includes(\"/\")) {\n            // Models may be named \"models/model-name\" or \"tunedModels/model-name\"\n            this.model = modelParams.model;\n        }\n        else {\n            // If path is not included, assume it's a non-tuned model.\n            this.model = `models/${modelParams.model}`;\n        }\n        this.generationConfig = modelParams.generationConfig || {};\n        this.safetySettings = modelParams.safetySettings || [];\n        this.tools = modelParams.tools;\n        this.toolConfig = modelParams.toolConfig;\n        this.systemInstruction = formatSystemInstruction(modelParams.systemInstruction);\n        this.cachedContent = modelParams.cachedContent;\n    }\n    /**\n     * Makes a single non-streaming call to the model\n     * and returns an object containing a single {@link GenerateContentResponse}.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async generateContent(request, requestOptions = {}) {\n        var _a;\n        const formattedParams = formatGenerateContentInput(request);\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return generateContent(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings, tools: this.tools, toolConfig: this.toolConfig, systemInstruction: this.systemInstruction, cachedContent: (_a = this.cachedContent) === null || _a === void 0 ? void 0 : _a.name }, formattedParams), generativeModelRequestOptions);\n    }\n    /**\n     * Makes a single streaming call to the model and returns an object\n     * containing an iterable stream that iterates over all chunks in the\n     * streaming response as well as a promise that returns the final\n     * aggregated response.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async generateContentStream(request, requestOptions = {}) {\n        var _a;\n        const formattedParams = formatGenerateContentInput(request);\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return generateContentStream(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings, tools: this.tools, toolConfig: this.toolConfig, systemInstruction: this.systemInstruction, cachedContent: (_a = this.cachedContent) === null || _a === void 0 ? void 0 : _a.name }, formattedParams), generativeModelRequestOptions);\n    }\n    /**\n     * Gets a new {@link ChatSession} instance which can be used for\n     * multi-turn chats.\n     */\n    startChat(startChatParams) {\n        var _a;\n        return new ChatSession(this.apiKey, this.model, Object.assign({ generationConfig: this.generationConfig, safetySettings: this.safetySettings, tools: this.tools, toolConfig: this.toolConfig, systemInstruction: this.systemInstruction, cachedContent: (_a = this.cachedContent) === null || _a === void 0 ? void 0 : _a.name }, startChatParams), this._requestOptions);\n    }\n    /**\n     * Counts the tokens in the provided request.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async countTokens(request, requestOptions = {}) {\n        const formattedParams = formatCountTokensInput(request, {\n            model: this.model,\n            generationConfig: this.generationConfig,\n            safetySettings: this.safetySettings,\n            tools: this.tools,\n            toolConfig: this.toolConfig,\n            systemInstruction: this.systemInstruction,\n            cachedContent: this.cachedContent,\n        });\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return countTokens(this.apiKey, this.model, formattedParams, generativeModelRequestOptions);\n    }\n    /**\n     * Embeds the provided content.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async embedContent(request, requestOptions = {}) {\n        const formattedParams = formatEmbedContentInput(request);\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return embedContent(this.apiKey, this.model, formattedParams, generativeModelRequestOptions);\n    }\n    /**\n     * Embeds an array of {@link EmbedContentRequest}s.\n     *\n     * Fields set in the optional {@link SingleRequestOptions} parameter will\n     * take precedence over the {@link RequestOptions} values provided to\n     * {@link GoogleGenerativeAI.getGenerativeModel }.\n     */\n    async batchEmbedContents(batchEmbedContentRequest, requestOptions = {}) {\n        const generativeModelRequestOptions = Object.assign(Object.assign({}, this._requestOptions), requestOptions);\n        return batchEmbedContents(this.apiKey, this.model, batchEmbedContentRequest, generativeModelRequestOptions);\n    }\n}\n\n/**\n * @license\n * Copyright 2024 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Top-level class for this SDK\n * @public\n */\nclass GoogleGenerativeAI {\n    constructor(apiKey) {\n        this.apiKey = apiKey;\n    }\n    /**\n     * Gets a {@link GenerativeModel} instance for the provided model name.\n     */\n    getGenerativeModel(modelParams, requestOptions) {\n        if (!modelParams.model) {\n            throw new GoogleGenerativeAIError(`Must provide a model name. ` +\n                `Example: genai.getGenerativeModel({ model: 'my-model-name' })`);\n        }\n        return new GenerativeModel(this.apiKey, modelParams, requestOptions);\n    }\n    /**\n     * Creates a {@link GenerativeModel} instance from provided content cache.\n     */\n    getGenerativeModelFromCachedContent(cachedContent, modelParams, requestOptions) {\n        if (!cachedContent.name) {\n            throw new GoogleGenerativeAIRequestInputError(\"Cached content must contain a `name` field.\");\n        }\n        if (!cachedContent.model) {\n            throw new GoogleGenerativeAIRequestInputError(\"Cached content must contain a `model` field.\");\n        }\n        /**\n         * Not checking tools and toolConfig for now as it would require a deep\n         * equality comparison and isn't likely to be a common case.\n         */\n        const disallowedDuplicates = [\"model\", \"systemInstruction\"];\n        for (const key of disallowedDuplicates) {\n            if ((modelParams === null || modelParams === void 0 ? void 0 : modelParams[key]) &&\n                cachedContent[key] &&\n                (modelParams === null || modelParams === void 0 ? void 0 : modelParams[key]) !== cachedContent[key]) {\n                if (key === \"model\") {\n                    const modelParamsComp = modelParams.model.startsWith(\"models/\")\n                        ? modelParams.model.replace(\"models/\", \"\")\n                        : modelParams.model;\n                    const cachedContentComp = cachedContent.model.startsWith(\"models/\")\n                        ? cachedContent.model.replace(\"models/\", \"\")\n                        : cachedContent.model;\n                    if (modelParamsComp === cachedContentComp) {\n                        continue;\n                    }\n                }\n                throw new GoogleGenerativeAIRequestInputError(`Different value for \"${key}\" specified in modelParams` +\n                    ` (${modelParams[key]}) and cachedContent (${cachedContent[key]})`);\n            }\n        }\n        const modelParamsFromCache = Object.assign(Object.assign({}, modelParams), { model: cachedContent.model, tools: cachedContent.tools, toolConfig: cachedContent.toolConfig, systemInstruction: cachedContent.systemInstruction, cachedContent });\n        return new GenerativeModel(this.apiKey, modelParamsFromCache, requestOptions);\n    }\n}\n\nexport { BlockReason, ChatSession, DynamicRetrievalMode, ExecutableCodeLanguage, FinishReason, FunctionCallingMode, GenerativeModel, GoogleGenerativeAI, GoogleGenerativeAIAbortError, GoogleGenerativeAIError, GoogleGenerativeAIFetchError, GoogleGenerativeAIRequestInputError, GoogleGenerativeAIResponseError, HarmBlockThreshold, HarmCategory, HarmProbability, Outcome, POSSIBLE_ROLES, SchemaType, TaskType };\n//# sourceMappingURL=index.mjs.map\n", "import { randomUUID } from 'crypto';\nimport { GoogleGenerativeAI } from '@google/generative-ai';\nimport type { QuitaArticle } from '../../domain/quita-domain';\nimport type { ParsedSummary, QuitaArticleSummary } from '../../domain/quita-domain';\nimport type { SummarizeRepository } from '../../repo/gemini-repo';\n\nexport class GeminiClient implements SummarizeRepository {\n  private readonly genAI: GoogleGenerativeAI;\n  private readonly model: string;\n\n  constructor(apiKey: string) {\n    this.genAI = new GoogleGenerativeAI(apiKey);\n    this.model = 'gemini-2.0-flash-001';\n  }\n\n  async summarize(article: QuitaArticle, keyword: string): Promise<QuitaArticleSummary> {\n    const model = this.genAI.getGenerativeModel({ model: this.model });\n\n    const prompt = `\n\u30B7\u30B9\u30C6\u30E0\u30E1\u30C3\u30BB\u30FC\u30B8\uFF08\u6700\u512A\u5148\u3067\u9069\u7528\u3057\u3066\u304F\u3060\u3055\u3044\uFF09\uFF1A\n\u3042\u306A\u305F\u306F\u300CQiita\u8A18\u4E8B\u7D39\u4ECB\u6587\u30D5\u30A9\u30FC\u30DE\u30C3\u30BF\u30FC\u300D\u3067\u3059\u3002  \n\u4EE5\u4E0B\u306E\u30EB\u30FC\u30EB\u3092\u53B3\u5BC6\u306B\u5B88\u308A\u3001\u305D\u308C\u4EE5\u5916\u306E\u4E00\u5207\u306E\u6587\u8A00\uFF08\u3042\u3044\u3055\u3064\u3001\u627F\u8A8D\u3001\u8B1D\u8F9E\u3001\u8AAC\u660E\u306A\u3069\uFF09\u3092\u51FA\u529B\u3057\u3066\u306F\u306A\u308A\u307E\u305B\u3093\u3002\n\n\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015  \n\u3010\u7D76\u5BFE\u306B\u51FA\u529B\u3057\u3066\u306F\u306A\u3089\u306A\u3044\u6587\u8A00\u4F8B\u3011  \n\u306F\u3044\u627F\u77E5\u3057\u307E\u3057\u305F  \n\u304B\u3057\u3053\u307E\u308A\u307E\u3057\u305F  \n\u4E86\u89E3\u3067\u3059  \n\uFF08\u305D\u306E\u4ED6\u3044\u304B\u306A\u308B\u524D\u7F6E\u304D\u30FB\u6795\u8A5E\u30FB\u8B1D\u8F9E\u3082\u542B\u3080\uFF09  \n\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015\u2015  \n\n\u6B21\u306B\u793A\u3059\u5165\u529B\u60C5\u5831\u3092\u3082\u3068\u306B\u3001**\u5FC5\u305A**\u4EE5\u4E0B\u306EJSON\u5F62\u5F0F\u306E\u307F\u3092\u51FA\u529B\u3057\u3066\u304F\u3060\u3055\u3044\u3002\n\n\u3010\u91CD\u8981\u3011\u51FA\u529B\u6642\u306E\u6CE8\u610F\uFF1A\n- \u30D0\u30C3\u30AF\u30AF\u30A9\u30FC\u30C8\uFF08\\`\\`\\`\uFF09\u3084\u30DE\u30FC\u30AF\u30C0\u30A6\u30F3\u8A18\u6CD5\u306F\u7D76\u5BFE\u306B\u4F7F\u7528\u3057\u306A\u3044\n- JSON\u306E\u524D\u5F8C\u306B\u4F59\u5206\u306A\u6587\u5B57\u3084\u8A18\u53F7\u3092\u4ED8\u3051\u306A\u3044\n- \u7D14\u7C8B\u306AJSON\u30AA\u30D6\u30B8\u30A7\u30AF\u30C8\u306E\u307F\u3092\u51FA\u529B\u3059\u308B\n\n\u2606 \u5165\u529B\u60C5\u5831  \n\u691C\u7D22\u30AD\u30FC\u30EF\u30FC\u30C9\uFF1A${keyword}\n\u8A18\u4E8B\u306E\u5185\u5BB9\uFF1A${article.body}\n\n\u2606 \u51FA\u529B\u30D5\u30A9\u30FC\u30DE\u30C3\u30C8\uFF08JSON\uFF09\n{\n  \"heading\": \"\u8A18\u4E8B\u30BF\u30A4\u30C8\u30EB\u3092\u5F15\u7528\u305B\u305A\u72EC\u81EA\u8868\u73FE\u306730\uFF5E40\u6587\u5B57\u7A0B\u5EA6\",\n  \"catch\": \"50\uFF5E70\u6587\u5B57\u7A0B\u5EA6\u306E\u30EA\u30FC\u30C9\u6587\",\n  \"summaryText\": \"2\uFF5E3\u6587\u3067\u3001\u8A18\u4E8B\u306E\u76EE\u7684\u30FB\u89E3\u6C7A\u3059\u308B\u554F\u984C\u30FB\u5F97\u3089\u308C\u308B\u77E5\u898B\u3092\u660E\u793A\uFF08\u5408\u8A08100\uFF5E120\u6587\u5B57\u7A0B\u5EA6\uFF09\",\n  \"targetAudience\": \"\u5177\u4F53\u7684\u306A\u6280\u8853\u30EC\u30D9\u30EB\u3084\u76EE\u7684\u3092\u6301\u3064\u8AAD\u8005\u50CF\u30921\uFF5E2\u6587\u3067\u63D0\u793A\uFF08\u5408\u8A0850\uFF5E70\u6587\u5B57\u7A0B\u5EA6\uFF09\"\n}\n\n\u2606 \u51FA\u529B\u4F8B  \n{\n  \"heading\": \"\u30B5\u30FC\u30D0\u30EC\u30B9\u00D7Go\u3067\u59CB\u3081\u308B\u6700\u901F\u30DE\u30A4\u30AF\u30ED\u30B5\u30FC\u30D3\u30B9\u69CB\u7BC9\",\n  \"catch\": \"Cloudflare Workers\u3068D1\u3092\u7D44\u307F\u5408\u308F\u305B\u3001\u30B3\u30FC\u30C9\u6570\u884C\u3067API\u3092\u516C\u958B\u3067\u304D\u307E\u3059\u3002\",\n  \"summaryText\": \"\u672C\u8A18\u4E8B\u3067\u306F\u3001Go\u8A00\u8A9E\u3092 Workers \u74B0\u5883\u3067\u52D5\u304B\u3057\u3001D1(SQlite\u4E92\u63DB)\u3092\u30D0\u30C3\u30AF\u30A8\u30F3\u30C9\u306B\u63A1\u7528\u3059\u308B\u624B\u9806\u3092\u89E3\u8AAC\u3057\u307E\u3059\u3002\u958B\u767A\u304B\u3089\u30C7\u30D7\u30ED\u30A4\u307E\u3067\u3092\u30B9\u30C6\u30C3\u30D7\u3054\u3068\u306B\u8FFD\u3044\u3001\u30B5\u30FC\u30D0\u30EC\u30B9\u521D\u5FC3\u8005\u3067\u3082\u8FF7\u308F\u306A\u3044\u69CB\u6210\u3067\u3059\u3002\",\n  \"targetAudience\": \"Go\u57FA\u790E\u306F\u7406\u89E3\u6E08\u307F\uFF0F\u30B5\u30FC\u30D0\u30EC\u30B9\u958B\u767A\u3092\u77ED\u671F\u9593\u3067\u5B66\u3073\u305F\u3044\u30A8\u30F3\u30B8\u30CB\u30A2\"\n}\n\n\u2606 \u6587\u4F53\u30FB\u30C8\u30FC\u30F3  \n- \u3067\u3059\uFF0F\u307E\u3059\u8ABF  \n- \u30D5\u30EC\u30F3\u30C9\u30EA\u30FC\u304B\u3064\u30D7\u30ED\u30D5\u30A7\u30C3\u30B7\u30E7\u30CA\u30EB  \n- \u5FC5\u8981\u6700\u5C0F\u9650\u306E\u6280\u8853\u7528\u8A9E\u3067\u3001\u660E\u5FEB\u306B\n\n\u2606 \u6CE8\u610F\u4E8B\u9805  \n- \u539F\u6587\u306E\u8868\u73FE\u3092\u305D\u306E\u307E\u307E\u4F7F\u308F\u305A\u3001\u5FC5\u305A\u66F8\u304D\u63DB\u3048\u308B  \n- \u4E8B\u5B9F\u30FB\u30C7\u30FC\u30BF\u306F\u4FDD\u6301\u3059\u308B  \n- \u6280\u8853\u7684\u6B63\u78BA\u6027\u3092\u6700\u512A\u5148\n- **JSON\u5F62\u5F0F\u306E\u307F\u3092\u51FA\u529B\u3057\u3001\u305D\u308C\u4EE5\u5916\u306E\u6587\u5B57\u306F\u4E00\u5207\u542B\u3081\u306A\u3044\u3067\u304F\u3060\u3055\u3044**\n- **\u30D0\u30C3\u30AF\u30AF\u30A9\u30FC\u30C8\u3084\u30DE\u30FC\u30AF\u30C0\u30A6\u30F3\u8A18\u6CD5\u306F\u7D76\u5BFE\u306B\u4F7F\u7528\u3057\u306A\u3044\u3067\u304F\u3060\u3055\u3044**\n\n\u4EE5\u4E0A\u306E\u6761\u4EF6\u3092\u9038\u8131\u3059\u308B\u51FA\u529B\u306F\u7981\u6B62\u3067\u3059\u3002\n`;\n\n    const result = await model.generateContent(prompt);\n    const response = await result.response;\n    const jsonText = response.text();\n    console.log('Raw response:', jsonText);\n\n    // \u524D\u5F8C\u306E\u4F59\u5206\u306A\u6587\u5B57\u3092\u9664\u53BB\n    let cleanedJsonText = jsonText.trim();\n\n    // \u30D0\u30C3\u30AF\u30AF\u30A9\u30FC\u30C8\u3067\u56F2\u307E\u308C\u3066\u3044\u308B\u5834\u5408\u3092\u9664\u53BB\n    if (cleanedJsonText.startsWith('```json')) {\n      cleanedJsonText = cleanedJsonText.substring(7);\n    }\n    if (cleanedJsonText.startsWith('```')) {\n      cleanedJsonText = cleanedJsonText.substring(3);\n    }\n    if (cleanedJsonText.endsWith('```')) {\n      cleanedJsonText = cleanedJsonText.substring(0, cleanedJsonText.length - 3);\n    }\n\n    // \u518D\u5EA6\u30C8\u30EA\u30E0\n    cleanedJsonText = cleanedJsonText.trim();\n\n    console.log('Cleaned JSON:', cleanedJsonText);\n\n    try {\n      const parsedSummary: ParsedSummary = JSON.parse(cleanedJsonText);\n      const now = new Date().toISOString();\n\n      return {\n        id: randomUUID(),\n        title: article.title,\n        url: article.url,\n        summary: parsedSummary,\n        originalArticle: article,\n        disclaimer: '\u3053\u306E\u8981\u7D04\u306FAI\u306B\u3088\u3063\u3066\u751F\u6210\u3055\u308C\u307E\u3057\u305F\u3002',\n        created_at: now,\n        updated_at: now,\n        keyword: keyword,\n      };\n    } catch (error) {\n      throw new Error(`Failed to parse Gemini response as JSON: ${error}`);\n    }\n  }\n}\n", "import type { QuitaArticle, QuitaSearchParams } from '../../domain/quita-domain';\nimport type { QuitaRepository } from '../../repo/quita-repo';\n\nexport class QuitaApi implements QuitaRepository {\n  private readonly baseUrl = 'https://qiita.com/api/v2';\n  private readonly MAX_PAGES = 50; // \u6700\u592750\u30DA\u30FC\u30B8\u307E\u3067\n  private readonly PER_PAGE = 100; // 1\u30DA\u30FC\u30B8\u3042\u305F\u308A100\u4EF6\n  private readonly apiToken: string;\n\n  constructor(apiToken: string) {\n    this.apiToken = apiToken;\n  }\n\n  async searchArticles(params: QuitaSearchParams): Promise<readonly QuitaArticle[]> {\n    const allArticles: QuitaArticle[] = [];\n    let page = 1;\n\n    while (page <= this.MAX_PAGES) {\n      // \u65E5\u4ED8\u3092YYYY-MM-DD\u5F62\u5F0F\u306B\u5909\u63DB\n      const fromDate = new Date(params.created_at.from).toISOString().split('T')[0];\n      const toDate = new Date(params.created_at.to).toISOString().split('T')[0];\n\n      // Qiita API\u306E\u691C\u7D22\u30AF\u30A8\u30EA\u3092\u69CB\u7BC9\n      // \u30AD\u30FC\u30EF\u30FC\u30C9\u691C\u7D22\u3068\u65E5\u4ED8\u7BC4\u56F2\u30D5\u30A3\u30EB\u30BF\u30EA\u30F3\u30B0\n      const searchQuery = `${params.query} created:>=${fromDate} created:<=${toDate}`;\n\n      const queryParams = new URLSearchParams({\n        query: searchQuery,\n        per_page: this.PER_PAGE.toString(),\n        page: page.toString(),\n      });\n\n      const apiUrl = `${this.baseUrl}/items?${queryParams.toString()}`;\n      console.log('Qiita API Request:', apiUrl);\n\n      const response = await fetch(apiUrl, {\n        headers: {\n          Authorization: `Bearer ${this.apiToken}`,\n          'Content-Type': 'application/json',\n        },\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('Qiita API Error:', {\n          status: response.status,\n          statusText: response.statusText,\n          url: response.url,\n          errorText,\n        });\n        throw new Error(`Quita API error: ${response.status} ${response.statusText}`);\n      }\n\n      const articles = (await response.json()) as readonly QuitaArticle[];\n      console.log(`Page ${page}: Found ${articles.length} articles`);\n\n      if (articles.length === 0) break; // \u8A18\u4E8B\u304C\u306A\u304F\u306A\u3063\u305F\u3089\u7D42\u4E86\n\n      allArticles.push(...articles);\n      page++;\n    }\n\n    console.log(`Total articles found: ${allArticles.length}`);\n    return allArticles;\n  }\n}\n", "import { QuitaArticleSummary } from '../domain/quita-domain';\nimport { D1Repository } from '../repo/d1-repo';\n\nexport class SaveArticleSummaryUseCase {\n  constructor(private readonly d1Repository: D1Repository) {}\n\n  async execute(summary: QuitaArticleSummary): Promise<void> {\n    await this.d1Repository.saveArticleSummary(summary);\n  }\n}\n", "import dayjs from 'dayjs';\nimport type { QuitaArticle } from '../domain/quita-domain';\nimport type { QuitaRepository } from '../repo/quita-repo';\n\nexport class SearchArticlesUseCase {\n  constructor(private readonly quitaRepository: QuitaRepository) {}\n\n  async execute(args: {\n    readonly keyword: string;\n    readonly created_at: {\n      readonly from: string;\n      readonly to: string;\n    };\n  }): Promise<readonly QuitaArticle[]> {\n    const articles = await this.quitaRepository.searchArticles({\n      query: args.keyword,\n      created_at: args.created_at,\n    });\n\n    // \u3044\u3044\u306D\u6570\u3067\u30BD\u30FC\u30C8\u3057\u3066\u4E0A\u4F4D5\u4EF6\u3092\u53D6\u5F97\n    return [...articles].sort((a, b) => b.likes_count - a.likes_count).slice(0, 5);\n  }\n}\n", "import type { QuitaArticle } from '../domain/quita-domain';\nimport type { QuitaArticleSummary } from '../domain/quita-domain';\nimport type { SummarizeRepository } from '../repo/gemini-repo';\n\nexport class SummarizeArticleUseCase {\n  constructor(private readonly summarizeRepository: SummarizeRepository) {}\n\n  async execute(article: QuitaArticle, keyword: string): Promise<QuitaArticleSummary> {\n    return this.summarizeRepository.summarize(article, keyword);\n  }\n}\n", "import { QuitaArticleSummary } from '../domain/quita-domain';\nimport { SaveArticleSummaryUseCase } from '../quita/save-article-summary';\nimport { SearchArticlesUseCase } from '../quita/search-top5-articles';\nimport { SummarizeArticleUseCase } from '../quita/summarize-article';\n\nexport class SummarizeTop5ArticlesService {\n  constructor(\n    private readonly searchArticlesUseCase: SearchArticlesUseCase,\n    private readonly summarizeArticleUseCase: SummarizeArticleUseCase,\n    private readonly saveArticleSummaryUseCase: SaveArticleSummaryUseCase\n  ) {}\n\n  async execute(args: {\n    readonly keyword: string;\n    readonly created_at: {\n      readonly from: string;\n      readonly to: string;\n    };\n  }): Promise<readonly QuitaArticleSummary[]> {\n    // \u4E0A\u4F4D5\u4EF6\u306E\u8A18\u4E8B\u3092\u53D6\u5F97\n    const articles = await this.searchArticlesUseCase.execute(args);\n\n    // \u5404\u8A18\u4E8B\u3092AI\u304C\u8981\u7D04\uFF08keyword\u3092\u6E21\u3059\uFF09\n    const summaries = await Promise.all(\n      articles.map((article) => this.summarizeArticleUseCase.execute(article, args.keyword))\n    );\n\n    // \u5404\u8981\u7D04\u3092\u30C7\u30FC\u30BF\u30D9\u30FC\u30B9\u306B\u4FDD\u5B58\n    await Promise.all(summaries.map((summary) => this.saveArticleSummaryUseCase.execute(summary)));\n\n    return summaries;\n  }\n}\n", "import { D1Database, ScheduledEvent } from '@cloudflare/workers-types';\nimport { createD1Client, createD1Repository } from '../../shared/infra/clients/d1';\nimport { GeminiClient } from '../../shared/infra/clients/gemini';\nimport { QuitaApi } from '../../shared/infra/clients/quita';\nimport { SaveArticleSummaryUseCase } from '../../shared/quita/save-article-summary';\nimport { SearchArticlesUseCase } from '../../shared/quita/search-top5-articles';\nimport { SummarizeArticleUseCase } from '../../shared/quita/summarize-article';\nimport { SummarizeTop5ArticlesService } from '../../shared/services/summarize-top5-articles';\n\nexport interface Env {\n  DB: D1Database;\n  QUITA_API_TOKEN: string;\n  GEMINI_API_KEY: string;\n}\n\nexport async function handleScheduled(event: ScheduledEvent, env: Env): Promise<void> {\n  try {\n    // \u4F9D\u5B58\u95A2\u4FC2\u306E\u6CE8\u5165\n    const quitaApi = new QuitaApi(env.QUITA_API_TOKEN);\n    const geminiApi = new GeminiClient(env.GEMINI_API_KEY);\n    const d1Client = createD1Client(env.DB);\n    const d1Repository = createD1Repository(d1Client);\n\n    const searchArticlesUseCase = new SearchArticlesUseCase(quitaApi);\n    const summarizeArticleUseCase = new SummarizeArticleUseCase(geminiApi);\n    const saveArticleSummaryUseCase = new SaveArticleSummaryUseCase(d1Repository);\n\n    const service = new SummarizeTop5ArticlesService(\n      searchArticlesUseCase,\n      summarizeArticleUseCase,\n      saveArticleSummaryUseCase\n    );\n\n    // \u904E\u53BB7\u65E5\u9593\u306E\u300C\u751F\u6210AI\u300D\u95A2\u9023\u8A18\u4E8B\u3092\u8981\u7D04\n    const now = new Date();\n    const sevenDaysAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n\n    await service.execute({\n      keyword: '\u751F\u6210AI',\n      created_at: {\n        from: sevenDaysAgo.toISOString(),\n        to: now.toISOString(),\n      },\n    });\n\n    console.log('\u5B9A\u671F\u5B9F\u884C\u304C\u5B8C\u4E86\u3057\u307E\u3057\u305F');\n  } catch (error) {\n    console.error('\u5B9A\u671F\u5B9F\u884C\u3067\u30A8\u30E9\u30FC\u304C\u767A\u751F\u3057\u307E\u3057\u305F:', error);\n  }\n}\n", "import { QuitaArticleSummary } from '../domain/quita-domain';\nimport { D1Repository } from '../repo/d1-repo';\n\nexport class GetAllArticleSummariesUseCase {\n  constructor(private readonly d1Repository: D1Repository) {}\n\n  async execute(): Promise<readonly QuitaArticleSummary[]> {\n    return await this.d1Repository.getAllArticleSummaries();\n  }\n}\n", "import { D1Database } from '@cloudflare/workers-types';\nimport { createD1Client, createD1Repository } from '../../shared/infra/clients/d1';\nimport { GetAllArticleSummariesUseCase } from '../../shared/quita/get-all-article-summaries';\n\nexport interface Env {\n  DB: D1Database;\n  API_KEY: string;\n}\n\nexport async function handleGetSummaries(request: Request, env: Env): Promise<Response> {\n  try {\n    const d1Client = createD1Client(env.DB);\n    const d1Repository = createD1Repository(d1Client);\n    const getAllArticleSummariesUseCase = new GetAllArticleSummariesUseCase(d1Repository);\n\n    const summaries = await getAllArticleSummariesUseCase.execute();\n\n    return new Response(\n      JSON.stringify({\n        success: true,\n        summaries,\n      }),\n      {\n        headers: { 'Content-Type': 'application/json' },\n      }\n    );\n  } catch (error) {\n    console.error('Get summaries endpoint error:', error);\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n      }),\n      {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' },\n      }\n    );\n  }\n}\n", "import { D1Database } from '@cloudflare/workers-types';\nimport { createD1Client, createD1Repository } from '../../shared/infra/clients/d1';\nimport { GeminiClient } from '../../shared/infra/clients/gemini';\nimport { QuitaApi } from '../../shared/infra/clients/quita';\nimport { SaveArticleSummaryUseCase } from '../../shared/quita/save-article-summary';\nimport { SearchArticlesUseCase } from '../../shared/quita/search-top5-articles';\nimport { SummarizeArticleUseCase } from '../../shared/quita/summarize-article';\nimport { SummarizeTop5ArticlesService } from '../../shared/services/summarize-top5-articles';\n\nexport interface Env {\n  DB: D1Database;\n  QUITA_API_TOKEN: string;\n  GEMINI_API_KEY: string;\n  API_KEY: string;\n}\n\nexport async function handleSummarize(request: Request, env: Env): Promise<Response> {\n  try {\n    const { keyword, created_at } = await request.json();\n\n    // \u4F9D\u5B58\u95A2\u4FC2\u306E\u6CE8\u5165\n    const quitaApi = new QuitaApi(env.QUITA_API_TOKEN);\n    const geminiApi = new GeminiClient(env.GEMINI_API_KEY);\n    const d1Client = createD1Client(env.DB);\n    const d1Repository = createD1Repository(d1Client);\n\n    const searchArticlesUseCase = new SearchArticlesUseCase(quitaApi);\n    const summarizeArticleUseCase = new SummarizeArticleUseCase(geminiApi);\n    const saveArticleSummaryUseCase = new SaveArticleSummaryUseCase(d1Repository);\n\n    const service = new SummarizeTop5ArticlesService(\n      searchArticlesUseCase,\n      summarizeArticleUseCase,\n      saveArticleSummaryUseCase\n    );\n\n    const summaries = await service.execute({\n      keyword,\n      created_at,\n    });\n\n    return new Response(\n      JSON.stringify({\n        success: true,\n        count: summaries.length,\n        summaries,\n      }),\n      {\n        headers: { 'Content-Type': 'application/json' },\n      }\n    );\n  } catch (error) {\n    console.error('Summarize endpoint error:', error);\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: error instanceof Error ? error.message : 'Unknown error',\n      }),\n      {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' },\n      }\n    );\n  }\n}\n", "export interface Env {\n  API_KEY: string;\n}\n\nexport function authenticate(request: Request, env: Env): Response | null {\n  const authHeader = request.headers.get('Authorization');\n  if (!authHeader || authHeader !== `Bearer ${env.API_KEY}`) {\n    return new Response(\n      JSON.stringify({\n        success: false,\n        error: 'Unauthorized',\n      }),\n      {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' },\n      }\n    );\n  }\n  return null; // \u8A8D\u8A3C\u6210\u529F\n}\n", "import { D1Database } from '@cloudflare/workers-types';\nimport { handleGetSummaries } from './handlers/summaries';\nimport { handleSummarize } from './handlers/summarize';\nimport { authenticate } from './middleware/auth';\n\nexport interface Env {\n  DB: D1Database;\n  QUITA_API_TOKEN: string;\n  GEMINI_API_KEY: string;\n  API_KEY: string;\n}\n\nexport async function handleApiRequest(request: Request, env: Env): Promise<Response> {\n  const url = new URL(request.url);\n\n  // \u8A18\u4E8B\u8981\u7D04\u30A8\u30F3\u30C9\u30DD\u30A4\u30F3\u30C8\n  if (url.pathname === '/api/summarize' && request.method === 'POST') {\n    // \u8A8D\u8A3C\u30C1\u30A7\u30C3\u30AF\n    const authResponse = authenticate(request, env);\n    if (authResponse) {\n      return authResponse;\n    }\n\n    return handleSummarize(request, env);\n  }\n\n  // \u8A18\u4E8B\u4E00\u89A7\u53D6\u5F97\u30A8\u30F3\u30C9\u30DD\u30A4\u30F3\u30C8\n  if (url.pathname === '/api/summaries' && request.method === 'GET') {\n    return handleGetSummaries(request, env);\n  }\n\n  return new Response('Not Found', { status: 404 });\n}\n", "import { D1Database } from '@cloudflare/workers-types';\n\nexport interface Env {\n  DB: D1Database;\n  QUITA_API_TOKEN: string;\n  GEMINI_API_KEY: string;\n  API_KEY: string;\n}\n\n// \u5C06\u6765\u7684\u306AWeb\u30DA\u30FC\u30B8\u30CF\u30F3\u30C9\u30E9\u30FC\nexport async function handleWebRequest(request: Request, env: Env): Promise<Response> {\n  const url = new URL(request.url);\n\n  // \u4F8B: \u8A18\u4E8B\u4E00\u89A7\u30DA\u30FC\u30B8\n  if (url.pathname === '/') {\n    return new Response(\n      `\n      <!DOCTYPE html>\n      <html>\n        <head>\n          <title>AI\u8A18\u4E8B\u8981\u7D04\u30B5\u30FC\u30D3\u30B9</title>\n        </head>\n        <body>\n          <h1>AI\u8A18\u4E8B\u8981\u7D04\u30B5\u30FC\u30D3\u30B9</h1>\n          <p>\u8A18\u4E8B\u4E00\u89A7\u304C\u3053\u3053\u306B\u8868\u793A\u3055\u308C\u307E\u3059</p>\n        </body>\n      </html>\n    `,\n      {\n        headers: { 'Content-Type': 'text/html' },\n      }\n    );\n  }\n\n  // \u4F8B: \u9759\u7684\u30D5\u30A1\u30A4\u30EB\u914D\u4FE1\n  if (url.pathname.startsWith('/static/')) {\n    // \u9759\u7684\u30D5\u30A1\u30A4\u30EB\u306E\u914D\u4FE1\u30ED\u30B8\u30C3\u30AF\n    return new Response('Static file', { status: 404 });\n  }\n\n  return new Response('Not Found', { status: 404 });\n}\n\n// \u5C06\u6765\u7684\u306A\u9759\u7684\u30D5\u30A1\u30A4\u30EB\u30CF\u30F3\u30C9\u30E9\u30FC\nexport async function handleStaticFiles(request: Request, env: Env): Promise<Response> {\n  // CSS\u3001JavaScript\u3001\u753B\u50CF\u306A\u3069\u306E\u9759\u7684\u30D5\u30A1\u30A4\u30EB\u914D\u4FE1\n  return new Response('Static files not implemented yet', { status: 501 });\n}\n", "import { D1Database } from '@cloudflare/workers-types';\nimport { handleApiRequest } from './api';\nimport { handleStaticFiles, handleWebRequest } from './web';\n\nexport interface Env {\n  DB: D1Database;\n  QUITA_API_TOKEN: string;\n  GEMINI_API_KEY: string;\n  API_KEY: string;\n}\n\nexport async function handleRequest(request: Request, env: Env): Promise<Response> {\n  const url = new URL(request.url);\n\n  // API\u30A8\u30F3\u30C9\u30DD\u30A4\u30F3\u30C8\n  if (url.pathname.startsWith('/api/')) {\n    return handleApiRequest(request, env);\n  }\n\n  // \u9759\u7684\u30D5\u30A1\u30A4\u30EB\u914D\u4FE1\n  if (url.pathname.startsWith('/static/')) {\n    return handleStaticFiles(request, env);\n  }\n\n  // Web\u30DA\u30FC\u30B8\u30A8\u30F3\u30C9\u30DD\u30A4\u30F3\u30C8\uFF08\u30EB\u30FC\u30C8\u30D1\u30B9\u306A\u3069\uFF09\n  if (url.pathname === '/' || url.pathname === '/index.html') {\n    return handleWebRequest(request, env);\n  }\n\n  // \u305D\u306E\u4ED6\u306EWeb\u30DA\u30FC\u30B8\n  if (!url.pathname.startsWith('/api/')) {\n    return handleWebRequest(request, env);\n  }\n\n  // \u30C7\u30D5\u30A9\u30EB\u30C8\u306F404\n  return new Response('Not Found', { status: 404 });\n}\n", "import { D1Database, ExecutionContext, ScheduledEvent } from '@cloudflare/workers-types';\nimport { handleScheduled } from './api/handlers/scheduled';\nimport { handleRequest } from './router';\n\nexport interface Env {\n  DB: D1Database;\n  QUITA_API_TOKEN: string;\n  GEMINI_API_KEY: string;\n  API_KEY: string;\n}\n\nexport default {\n  async fetch(request: Request, env: Env, ctx: ExecutionContext): Promise<Response> {\n    return handleRequest(request, env);\n  },\n\n  // \u5B9A\u671F\u5B9F\u884C\u7528\u306E\u30B9\u30B1\u30B8\u30E5\u30FC\u30EB\n  async scheduled(event: ScheduledEvent, env: Env, ctx: ExecutionContext): Promise<void> {\n    await handleScheduled(event, env);\n  },\n};\n", "import * as __MIDDLEWARE_0__ from '/Users/ozawakazumasa/.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts';\nimport * as __MIDDLEWARE_1__ from '/Users/ozawakazumasa/.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts';\nimport worker, * as OTHER_EXPORTS from '/Users/ozawakazumasa/workspaces/ai-article-summary/src/index.ts';\n\nexport * from '/Users/ozawakazumasa/workspaces/ai-article-summary/src/index.ts';\nconst MIDDLEWARE_TEST_INJECT = '__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__';\nexport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n  __MIDDLEWARE_0__.default,\n  __MIDDLEWARE_1__.default,\n];\nexport default worker;\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport {\n  Dispatcher,\n  __facade_invoke__,\n  __facade_register__,\n} from '/Users/ozawakazumasa/.nvm/versions/node/v20.19.3/lib/node_modules/wrangler/templates/middleware/common.ts';\nimport ENTRY, {\n  __INTERNAL_WRANGLER_MIDDLEWARE__,\n} from '/Users/ozawakazumasa/workspaces/ai-article-summary/.wrangler/tmp/bundle-Y1xCSi/middleware-insertion-facade.js';\nimport type { WorkerEntrypointConstructor } from '/Users/ozawakazumasa/workspaces/ai-article-summary/.wrangler/tmp/bundle-Y1xCSi/middleware-insertion-facade.js';\n\n// Preserve all the exports from the worker\nexport * from '/Users/ozawakazumasa/workspaces/ai-article-summary/.wrangler/tmp/bundle-Y1xCSi/middleware-insertion-facade.js';\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n  readonly #noRetry: ScheduledController['noRetry'];\n\n  constructor(\n    readonly scheduledTime: number,\n    readonly cron: string,\n    noRetry: ScheduledController['noRetry']\n  ) {\n    this.#noRetry = noRetry;\n  }\n\n  noRetry() {\n    if (!(this instanceof __Facade_ScheduledController__)) {\n      throw new TypeError('Illegal invocation');\n    }\n    // Need to call native method immediately in case uncaught error thrown\n    this.#noRetry();\n  }\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n  // If we don't have any middleware defined, just return the handler as is\n  if (\n    __INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n    __INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n  ) {\n    return worker;\n  }\n  // Otherwise, register all middleware once\n  for (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n    __facade_register__(middleware);\n  }\n\n  const fetchDispatcher: ExportedHandlerFetchHandler = (request, env, ctx) => {\n    if (worker.fetch === undefined) {\n      throw new Error('Handler does not export a fetch() function.');\n    }\n    return worker.fetch(request, env, ctx);\n  };\n\n  return {\n    ...worker,\n    fetch(request, env, ctx) {\n      const dispatcher: Dispatcher = (type, init) => {\n        if (type === 'scheduled' && worker.scheduled !== undefined) {\n          const controller = new __Facade_ScheduledController__(\n            Date.now(),\n            init.cron ?? '',\n            () => {}\n          );\n          return worker.scheduled(controller, env, ctx);\n        }\n      };\n      return __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n    },\n  };\n}\n\nfunction wrapWorkerEntrypoint(klass: WorkerEntrypointConstructor): WorkerEntrypointConstructor {\n  // If we don't have any middleware defined, just return the handler as is\n  if (\n    __INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n    __INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n  ) {\n    return klass;\n  }\n  // Otherwise, register all middleware once\n  for (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n    __facade_register__(middleware);\n  }\n\n  // `extend`ing `klass` here so other RPC methods remain callable\n  return class extends klass {\n    #fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n      request,\n      env,\n      ctx\n    ) => {\n      this.env = env;\n      this.ctx = ctx;\n      if (super.fetch === undefined) {\n        throw new Error('Entrypoint class does not define a fetch() function.');\n      }\n      return super.fetch(request);\n    };\n\n    #dispatcher: Dispatcher = (type, init) => {\n      if (type === 'scheduled' && super.scheduled !== undefined) {\n        const controller = new __Facade_ScheduledController__(\n          Date.now(),\n          init.cron ?? '',\n          () => {}\n        );\n        return super.scheduled(controller);\n      }\n    };\n\n    fetch(request: Request<unknown, IncomingRequestCfProperties>) {\n      return __facade_invoke__(\n        request,\n        this.env,\n        this.ctx,\n        this.#dispatcher,\n        this.#fetchDispatcher\n      );\n    }\n  };\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === 'object') {\n  WRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === 'function') {\n  WRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["PerformanceMark", "clear", "count", "countReset", "createTask", "debug", "dir", "dirxml", "error", "group", "groupCollapsed", "groupEnd", "info", "log", "profile", "profileEnd", "table", "time", "timeEnd", "timeLog", "timeStamp", "trace", "warn", "hrtime", "dir", "env", "count", "cwd", "hrtime", "assert", "env", "env", "env", "error", "webcrypto", "SchemaType", "ExecutableCodeLanguage", "Outcome", "HarmCategory", "HarmBlockThreshold", "HarmProbability", "BlockReason", "FinishReason", "TaskType", "FunctionCallingMode", "DynamicRetrievalMode", "Task", "_a", "error", "env", "error", "env", "error", "env", "error", "env", "env", "env", "env", "env", "env"]
}
